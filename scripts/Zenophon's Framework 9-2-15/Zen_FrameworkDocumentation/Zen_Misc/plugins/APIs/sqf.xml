<?xml version="1.0" encoding="Windows-1252" ?>
<NotepadPlus>
    <AutoComplete language="SQF">
        <Environment ignoreCase="no" startFunc="(" stopFunc="" paramSeparator="," terminal=";" additionalWordChar="" />
        <KeyWord name="diag_activeSQFScripts"/>
        <KeyWord name="diag_activeSQSScripts"/>
        <KeyWord name="diag_activeMissionFSMs"/>
        <KeyWord name="sort"/>
        <KeyWord name="AISFinishHeal"/>
        <KeyWord name="ASLToATL"/>
        <KeyWord name="ATLToASL"/>
        <KeyWord name="HUDMovementLevels"/>
        <KeyWord name="WFSideText"/>
        <KeyWord name="__EVAL"/>
        <KeyWord name="__EXEC"/>
        <KeyWord name="__FILE__"/>
        <KeyWord name="__LINE__"/>
        <KeyWord name="_forEachIndex"/>
        <KeyWord name="_this"/>
        <KeyWord name="_x"/>
        <KeyWord name="abs"/>
        <KeyWord name="accTime"/>
        <KeyWord name="acos"/>
        <KeyWord name="action"/>
        <KeyWord name="actionKeys"/>
        <KeyWord name="actionKeysImages"/>
        <KeyWord name="actionKeysNames"/>
        <KeyWord name="actionKeysNamesArray"/>
        <KeyWord name="actionName"/>
        <KeyWord name="activateAddons"/>
        <KeyWord name="activateKey"/>
        <KeyWord name="activatedAddons"/>
        <KeyWord name="addAction"/>
        <KeyWord name="addBackpack"/>
        <KeyWord name="addBackpackCargo"/>
        <KeyWord name="addBackpackCargoGlobal"/>
        <KeyWord name="addBackpackGlobal"/>
        <KeyWord name="addCamShake"/>
        <KeyWord name="addCuratorAddons"/>
        <KeyWord name="addCuratorCameraArea"/>
        <KeyWord name="addCuratorEditableObjects"/>
        <KeyWord name="addCuratorEditingArea"/>
        <KeyWord name="addCuratorPoints"/>
        <KeyWord name="addEditorObject"/>
        <KeyWord name="addEventHandler"/>
        <KeyWord name="addGoggles"/>
        <KeyWord name="addGroupIcon"/>
        <KeyWord name="addHandgunItem"/>
        <KeyWord name="addHeadgear"/>
        <KeyWord name="addItem"/>
        <KeyWord name="addItemCargo"/>
        <KeyWord name="addItemCargoGlobal"/>
        <KeyWord name="addItemPool"/>
        <KeyWord name="addItemToBackpack"/>
        <KeyWord name="addItemToUniform"/>
        <KeyWord name="addItemToVest"/>
        <KeyWord name="addLiveStats"/>
        <KeyWord name="addMPEventHandler"/>
        <KeyWord name="addMagazine"/>
        <KeyWord name="addMagazineAmmoCargo"/>
        <KeyWord name="addMagazineCargo"/>
        <KeyWord name="addMagazineCargoGlobal"/>
        <KeyWord name="addMagazineGlobal"/>
        <KeyWord name="addMagazinePool"/>
        <KeyWord name="addMagazineTurret"/>
        <KeyWord name="addMagazines"/>
        <KeyWord name="addMenu"/>
        <KeyWord name="addMenuItem"/>
        <KeyWord name="addMissionEventHandler"/>
        <KeyWord name="addMusicEventHandler"/>
        <KeyWord name="addPrimaryWeaponItem"/>
        <KeyWord name="addPublicVariableEventHandler"/>
        <KeyWord name="addRating"/>
        <KeyWord name="addResources"/>
        <KeyWord name="addScore"/>
        <KeyWord name="addScoreSide"/>
        <KeyWord name="addSecondaryWeaponItem"/>
        <KeyWord name="addSwitchableUnit"/>
        <KeyWord name="addTeamMember"/>
        <KeyWord name="addToRemainsCollector"/>
        <KeyWord name="addUniform"/>
        <KeyWord name="addVehicle"/>
        <KeyWord name="addVest"/>
        <KeyWord name="addWaypoint"/>
        <KeyWord name="addWeapon"/>
        <KeyWord name="addWeaponCargo"/>
        <KeyWord name="addWeaponCargoGlobal"/>
        <KeyWord name="addWeaponGlobal"/>
        <KeyWord name="addWeaponPool"/>
        <KeyWord name="addWeaponTurret"/>
        <KeyWord name="agent"/>
        <KeyWord name="agents"/>
        <KeyWord name="aimPos"/>
        <KeyWord name="aimedAtTarget"/>
        <KeyWord name="airDensityRTD"/>
        <KeyWord name="airportSide"/>
        <KeyWord name="alive"/>
        <KeyWord name="allControls"/>
        <KeyWord name="allCurators"/>
        <KeyWord name="allDead"/>
        <KeyWord name="allDeadMen"/>
        <KeyWord name="allDisplays"/>
        <KeyWord name="allGroups"/>
        <KeyWord name="allMapMarkers"/>
        <KeyWord name="allMines"/>
        <KeyWord name="allMissionObjects"/>
        <KeyWord name="allSites"/>
        <KeyWord name="allTurrets"/>
        <KeyWord name="allUnits"/>
        <KeyWord name="allUnitsUav"/>
        <KeyWord name="allVariables"/>
        <KeyWord name="allVariables"/>
        <KeyWord name="allow3DMode"/>
        <KeyWord name="allowCrewInImmobile"/>
        <KeyWord name="allowCuratorLogicIgnoreAreas"/>
        <KeyWord name="allowDamage"/>
        <KeyWord name="allowDammage"/>
        <KeyWord name="allowFileOperations"/>
        <KeyWord name="allowFleeing"/>
        <KeyWord name="allowGetIn"/>
        <KeyWord name="ammo"/>
        <KeyWord name="and"/>
        <KeyWord name="animate"/>
        <KeyWord name="animateDoor"/>
        <KeyWord name="animationPhase"/>
        <KeyWord name="animationState"/>
        <KeyWord name="append"/>
        <KeyWord name="armoryPoints"/>
        <KeyWord name="asin"/>
        <KeyWord name="assert"/>
        <KeyWord name="assignAsCargo"/>
        <KeyWord name="assignAsCargoIndex"/>
        <KeyWord name="assignAsCommander"/>
        <KeyWord name="assignAsDriver"/>
        <KeyWord name="assignAsGunner"/>
        <KeyWord name="assignAsTurret"/>
        <KeyWord name="assignCurator"/>
        <KeyWord name="assignItem"/>
        <KeyWord name="assignTeam"/>
        <KeyWord name="assignToAirport"/>
        <KeyWord name="assignedCargo"/>
        <KeyWord name="assignedCommander"/>
        <KeyWord name="assignedDriver"/>
        <KeyWord name="assignedGunner"/>
        <KeyWord name="assignedItems"/>
        <KeyWord name="assignedTarget"/>
        <KeyWord name="assignedTeam"/>
        <KeyWord name="assignedVehicle"/>
        <KeyWord name="assignedVehicleRole"/>
        <KeyWord name="atan"/>
        <KeyWord name="atan2"/>
        <KeyWord name="atg"/>
        <KeyWord name="attachObject"/>
        <KeyWord name="attachTo"/>
        <KeyWord name="attachedObject"/>
        <KeyWord name="attachedObjects"/>
        <KeyWord name="attachedTo"/>
        <KeyWord name="attackEnabled"/>
        <KeyWord name="backpack"/>
        <KeyWord name="backpackCargo"/>
        <KeyWord name="backpackContainer"/>
        <KeyWord name="backpackItems"/>
        <KeyWord name="backpackMagazines"/>
        <KeyWord name="backpackSpaceFor"/>
        <KeyWord name="behaviour"/>
        <KeyWord name="benchmark"/>
        <KeyWord name="binocular"/>
        <KeyWord name="blufor"/>
        <KeyWord name="boundingBox"/>
        <KeyWord name="boundingBoxReal"/>
        <KeyWord name="boundingCenter"/>
        <KeyWord name="breakOut"/>
        <KeyWord name="breakTo"/>
        <KeyWord name="briefingName"/>
        <KeyWord name="buildingExit"/>
        <KeyWord name="buildingPos"/>
        <KeyWord name="buttonAction"/>
        <KeyWord name="buttonSetAction"/>
        <KeyWord name="cadetMode"/>
        <KeyWord name="call"/>
        <KeyWord name="callExtension"/>
        <KeyWord name="camCommand"/>
        <KeyWord name="camCommit"/>
        <KeyWord name="camCommitPrepared"/>
        <KeyWord name="camCommitted"/>
        <KeyWord name="camConstuctionSetParams"/>
        <KeyWord name="camCreate"/>
        <KeyWord name="camDestroy"/>
        <KeyWord name="camPreload"/>
        <KeyWord name="camPreloaded"/>
        <KeyWord name="camPrepareBank"/>
        <KeyWord name="camPrepareDir"/>
        <KeyWord name="camPrepareDive"/>
        <KeyWord name="camPrepareFocus"/>
        <KeyWord name="camPrepareFov"/>
        <KeyWord name="camPrepareFovRange"/>
        <KeyWord name="camPreparePos"/>
        <KeyWord name="camPrepareRelPos"/>
        <KeyWord name="camPrepareTarget"/>
        <KeyWord name="camSetBank"/>
        <KeyWord name="camSetDir"/>
        <KeyWord name="camSetDive"/>
        <KeyWord name="camSetFocus"/>
        <KeyWord name="camSetFov"/>
        <KeyWord name="camSetFovRange"/>
        <KeyWord name="camSetPos"/>
        <KeyWord name="camSetRelPos"/>
        <KeyWord name="camSetTarget"/>
        <KeyWord name="camTarget"/>
        <KeyWord name="camUseNVG"/>
        <KeyWord name="cameraEffect"/>
        <KeyWord name="cameraEffectEnableHUD"/>
        <KeyWord name="cameraInterest"/>
        <KeyWord name="cameraOn"/>
        <KeyWord name="cameraView"/>
        <KeyWord name="campaignConfigFile"/>
        <KeyWord name="canAdd"/>
        <KeyWord name="canAddItemToBackpack"/>
        <KeyWord name="canAddItemToUniform"/>
        <KeyWord name="canAddItemToVest"/>
        <KeyWord name="canFire"/>
        <KeyWord name="canMove"/>
        <KeyWord name="canSlingLoad"/>
        <KeyWord name="canStand"/>
        <KeyWord name="canUnloadInCombat"/>
        <KeyWord name="cancelSimpleTaskDestination"/>
        <KeyWord name="captive"/>
        <KeyWord name="captiveNum"/>
        <KeyWord name="case"/>
        <KeyWord name="catch"/>
        <KeyWord name="cbChecked"/>
        <KeyWord name="cbSetChecked"/>
        <KeyWord name="ceil"/>
        <KeyWord name="cheatsEnabled"/>
        <KeyWord name="checkAIFeature"/>
        <KeyWord name="civilian"/>
        <KeyWord name="className"/>
        <KeyWord name="clearAllItemsFromBackpack"/>
        <KeyWord name="clearBackpackCargo"/>
        <KeyWord name="clearBackpackCargoGlobal"/>
        <KeyWord name="clearGroupIcons"/>
        <KeyWord name="clearItemCargo"/>
        <KeyWord name="clearItemCargoGlobal"/>
        <KeyWord name="clearItemPool"/>
        <KeyWord name="clearMagazineCargo"/>
        <KeyWord name="clearMagazineCargoGlobal"/>
        <KeyWord name="clearMagazinePool"/>
        <KeyWord name="clearOverlay"/>
        <KeyWord name="clearRadio"/>
        <KeyWord name="clearWeaponCargo"/>
        <KeyWord name="clearWeaponCargoGlobal"/>
        <KeyWord name="clearWeaponPool"/>
        <KeyWord name="closeDialog"/>
        <KeyWord name="closeDisplay"/>
        <KeyWord name="closeOverlay"/>
        <KeyWord name="collapseObjectTree"/>
        <KeyWord name="collectiveRTD"/>
        <KeyWord name="combatMode"/>
        <KeyWord name="commandArtilleryFire"/>
        <KeyWord name="commandChat"/>
        <KeyWord name="commandFSM"/>
        <KeyWord name="commandFire"/>
        <KeyWord name="commandFollow"/>
        <KeyWord name="commandGetOut"/>
        <KeyWord name="commandMove"/>
        <KeyWord name="commandRadio"/>
        <KeyWord name="commandStop"/>
        <KeyWord name="commandTarget"/>
        <KeyWord name="commandWatch"/>
        <KeyWord name="commander"/>
        <KeyWord name="commandingMenu"/>
        <KeyWord name="comment"/>
        <KeyWord name="commitOverlay"/>
        <KeyWord name="compile"/>
        <KeyWord name="compileFinal"/>
        <KeyWord name="completedFSM"/>
        <KeyWord name="composeText"/>
        <KeyWord name="configClasses"/>
        <KeyWord name="configFile"/>
        <KeyWord name="configName"/>
        <KeyWord name="configProperties"/>
        <KeyWord name="connectTerminalToUav"/>
        <KeyWord name="controlNull"/>
        <KeyWord name="copyFromClipboard"/>
        <KeyWord name="copyToClipboard"/>
        <KeyWord name="copyWaypoints"/>
        <KeyWord name="cos"/>
        <KeyWord name="count"/>
        <KeyWord name="countEnemy"/>
        <KeyWord name="countFriendly"/>
        <KeyWord name="countSide"/>
        <KeyWord name="countType"/>
        <KeyWord name="countUnknown"/>
        <KeyWord name="createAgent"/>
        <KeyWord name="createCenter"/>
        <KeyWord name="createDialog"/>
        <KeyWord name="createDiaryLink"/>
        <KeyWord name="createDiaryRecord"/>
        <KeyWord name="createDiarySubject"/>
        <KeyWord name="createDisplay"/>
        <KeyWord name="createGearDialog"/>
        <KeyWord name="createGroup"/>
        <KeyWord name="createGuardedPoint"/>
        <KeyWord name="createLocation"/>
        <KeyWord name="createMarker"/>
        <KeyWord name="createMarkerLocal"/>
        <KeyWord name="createMenu"/>
        <KeyWord name="createMine"/>
        <KeyWord name="createMissionDisplay"/>
        <KeyWord name="createSimpleTask"/>
        <KeyWord name="createSite"/>
        <KeyWord name="createSoundSource"/>
        <KeyWord name="createTask"/>
        <KeyWord name="createTeam"/>
        <KeyWord name="createTrigger"/>
        <KeyWord name="createUnit"/>
        <KeyWord name="createVehicle"/>
        <KeyWord name="createVehicleCrew"/>
        <KeyWord name="createVehicleLocal"/>
        <KeyWord name="crew"/>
        <KeyWord name="ctrlActivate"/>
        <KeyWord name="ctrlAddEventHandler"/>
        <KeyWord name="ctrlAutoScrollDelay"/>
        <KeyWord name="ctrlAutoScrollRewind"/>
        <KeyWord name="ctrlAutoScrollSpeed"/>
        <KeyWord name="ctrlChecked"/>
        <KeyWord name="ctrlClassName"/>
        <KeyWord name="ctrlCommit"/>
        <KeyWord name="ctrlCommitted"/>
        <KeyWord name="ctrlCreate"/>
        <KeyWord name="ctrlDelete"/>
        <KeyWord name="ctrlEnable"/>
        <KeyWord name="ctrlEnabled"/>
        <KeyWord name="ctrlFade"/>
        <KeyWord name="ctrlHTMLLoaded"/>
        <KeyWord name="ctrlIDC"/>
        <KeyWord name="ctrlIDD"/>
        <KeyWord name="ctrlMapAnimAdd"/>
        <KeyWord name="ctrlMapAnimClear"/>
        <KeyWord name="ctrlMapAnimCommit"/>
        <KeyWord name="ctrlMapAnimDone"/>
        <KeyWord name="ctrlMapCursor"/>
        <KeyWord name="ctrlMapMouseOver"/>
        <KeyWord name="ctrlMapScale"/>
        <KeyWord name="ctrlMapScreenToWorld"/>
        <KeyWord name="ctrlMapWorldToScreen"/>
        <KeyWord name="ctrlModel"/>
        <KeyWord name="ctrlModelDirAndUp"/>
        <KeyWord name="ctrlModelDirection"/>
        <KeyWord name="ctrlModelScale"/>
        <KeyWord name="ctrlModelSide"/>
        <KeyWord name="ctrlModelUp"/>
        <KeyWord name="ctrlParent"/>
        <KeyWord name="ctrlPosition"/>
        <KeyWord name="ctrlRemoveAllEventHandlers"/>
        <KeyWord name="ctrlRemoveEventHandler"/>
        <KeyWord name="ctrlScale"/>
        <KeyWord name="ctrlSetActiveColor"/>
        <KeyWord name="ctrlSetAutoScrollDelay"/>
        <KeyWord name="ctrlSetAutoScrollRewind"/>
        <KeyWord name="ctrlSetAutoScrollSpeed"/>
        <KeyWord name="ctrlSetBackgroundColor"/>
        <KeyWord name="ctrlSetChecked"/>
        <KeyWord name="ctrlSetEventHandler"/>
        <KeyWord name="ctrlSetFade"/>
        <KeyWord name="ctrlSetFocus"/>
        <KeyWord name="ctrlSetFont"/>
        <KeyWord name="ctrlSetFontH1"/>
        <KeyWord name="ctrlSetFontH1B"/>
        <KeyWord name="ctrlSetFontH2"/>
        <KeyWord name="ctrlSetFontH2B"/>
        <KeyWord name="ctrlSetFontH3"/>
        <KeyWord name="ctrlSetFontH3B"/>
        <KeyWord name="ctrlSetFontH4"/>
        <KeyWord name="ctrlSetFontH4B"/>
        <KeyWord name="ctrlSetFontH5"/>
        <KeyWord name="ctrlSetFontH5B"/>
        <KeyWord name="ctrlSetFontH6"/>
        <KeyWord name="ctrlSetFontH6B"/>
        <KeyWord name="ctrlSetFontHeight"/>
        <KeyWord name="ctrlSetFontHeightH1"/>
        <KeyWord name="ctrlSetFontHeightH2"/>
        <KeyWord name="ctrlSetFontHeightH3"/>
        <KeyWord name="ctrlSetFontHeightH4"/>
        <KeyWord name="ctrlSetFontHeightH5"/>
        <KeyWord name="ctrlSetFontHeightH6"/>
        <KeyWord name="ctrlSetFontP"/>
        <KeyWord name="ctrlSetFontPB"/>
        <KeyWord name="ctrlSetForegroundColor"/>
        <KeyWord name="ctrlSetModel"/>
        <KeyWord name="ctrlSetModelDirAndUp"/>
        <KeyWord name="ctrlSetModelScale"/>
        <KeyWord name="ctrlSetPosition"/>
        <KeyWord name="ctrlSetScale"/>
        <KeyWord name="ctrlSetStructuredText"/>
        <KeyWord name="ctrlSetText"/>
        <KeyWord name="ctrlSetTextColor"/>
        <KeyWord name="ctrlSetTooltip"/>
        <KeyWord name="ctrlSetTooltipColorBox"/>
        <KeyWord name="ctrlSetTooltipColorShade"/>
        <KeyWord name="ctrlSetTooltipColorText"/>
        <KeyWord name="ctrlShow"/>
        <KeyWord name="ctrlShown"/>
        <KeyWord name="ctrlText"/>
        <KeyWord name="ctrlTextHeight"/>
        <KeyWord name="ctrlType"/>
        <KeyWord name="ctrlVisible"/>
        <KeyWord name="curatorAddons"/>
        <KeyWord name="curatorCamera"/>
        <KeyWord name="curatorCameraArea"/>
        <KeyWord name="curatorCameraAreaCeiling"/>
        <KeyWord name="curatorCoef"/>
        <KeyWord name="curatorEditableObjects"/>
        <KeyWord name="curatorEditingArea"/>
        <KeyWord name="curatorEditingAreaType"/>
        <KeyWord name="curatorMouseOver"/>
        <KeyWord name="curatorPoints"/>
        <KeyWord name="curatorRegisteredObjects"/>
        <KeyWord name="curatorSelected"/>
        <KeyWord name="curatorWaypointCost"/>
        <KeyWord name="currentCommand"/>
        <KeyWord name="currentMagazine"/>
        <KeyWord name="currentMagazineDetail"/>
        <KeyWord name="currentMagazineDetailTurret"/>
        <KeyWord name="currentMagazineTurret"/>
        <KeyWord name="currentMuzzle"/>
        <KeyWord name="currentTask"/>
        <KeyWord name="currentTasks"/>
        <KeyWord name="currentVisionMode"/>
        <KeyWord name="currentWaypoint"/>
        <KeyWord name="currentWeapon"/>
        <KeyWord name="currentWeaponMode"/>
        <KeyWord name="currentWeaponTurret"/>
        <KeyWord name="currentZeroing"/>
        <KeyWord name="cursorTarget"/>
        <KeyWord name="customChat"/>
        <KeyWord name="customRadio"/>
        <KeyWord name="cutFadeOut"/>
        <KeyWord name="cutObj"/>
        <KeyWord name="cutRsc"/>
        <KeyWord name="cutText"/>
        <KeyWord name="damage"/>
        <KeyWord name="date"/>
        <KeyWord name="dateToNumber"/>
        <KeyWord name="daytime"/>
        <KeyWord name="deActivateKey"/>
        <KeyWord name="debriefingText"/>
        <KeyWord name="debugFSM"/>
        <KeyWord name="debugLog"/>
        <KeyWord name="default"/>
        <KeyWord name="deg"/>
        <KeyWord name="deleteAt"/>
        <KeyWord name="deleteCenter"/>
        <KeyWord name="deleteCollection"/>
        <KeyWord name="deleteEditorObject"/>
        <KeyWord name="deleteGroup"/>
        <KeyWord name="deleteIdentity"/>
        <KeyWord name="deleteLocation"/>
        <KeyWord name="deleteMarker"/>
        <KeyWord name="deleteMarkerLocal"/>
        <KeyWord name="deleteRange"/>
        <KeyWord name="deleteResources"/>
        <KeyWord name="deleteSite"/>
        <KeyWord name="deleteStatus"/>
        <KeyWord name="deleteTeam"/>
        <KeyWord name="deleteVehicle"/>
        <KeyWord name="deleteVehicleCrew"/>
        <KeyWord name="deleteWaypoint"/>
        <KeyWord name="detach"/>
        <KeyWord name="detectedMines"/>
        <KeyWord name="diag_captureFrame"/>
        <KeyWord name="diag_captureSlowFrame"/>
        <KeyWord name="diag_fps"/>
        <KeyWord name="diag_fpsmin"/>
        <KeyWord name="diag_frameno"/>
        <KeyWord name="diag_log"/>
        <KeyWord name="diag_logSlowFrame"/>
        <KeyWord name="diag_tickTime"/>
        <KeyWord name="dialog"/>
        <KeyWord name="diarySubjectExists"/>
        <KeyWord name="difficulty"/>
        <KeyWord name="difficultyEnabled"/>
        <KeyWord name="difficultyEnabledRTD"/>
        <KeyWord name="directSay"/>
        <KeyWord name="direction"/>
        <KeyWord name="disableAI"/>
        <KeyWord name="disableCollisionWith"/>
        <KeyWord name="disableConversation"/>
        <KeyWord name="disableDebriefingStats"/>
        <KeyWord name="disableSerialization"/>
        <KeyWord name="disableTIEquipment"/>
        <KeyWord name="disableUAVConnectability"/>
        <KeyWord name="disableUserInput"/>
        <KeyWord name="displayAddEventHandler"/>
        <KeyWord name="displayCtrl"/>
        <KeyWord name="displayNull"/>
        <KeyWord name="displayRemoveAllEventHandlers"/>
        <KeyWord name="displayRemoveEventHandler"/>
        <KeyWord name="displaySetEventHandler"/>
        <KeyWord name="dissolveTeam"/>
        <KeyWord name="distance"/>
        <KeyWord name="distanceSqr"/>
        <KeyWord name="distributionRegion"/>
        <KeyWord name="do"/>
        <KeyWord name="doArtilleryFire"/>
        <KeyWord name="doFSM"/>
        <KeyWord name="doFire"/>
        <KeyWord name="doFollow"/>
        <KeyWord name="doGetOut"/>
        <KeyWord name="doMove"/>
        <KeyWord name="doStop"/>
        <KeyWord name="doTarget"/>
        <KeyWord name="doWatch"/>
        <KeyWord name="doorPhase"/>
        <KeyWord name="drawArrow"/>
        <KeyWord name="drawEllipse"/>
        <KeyWord name="drawIcon"/>
        <KeyWord name="drawIcon3D"/>
        <KeyWord name="drawLine"/>
        <KeyWord name="drawLine3D"/>
        <KeyWord name="drawLink"/>
        <KeyWord name="drawLocation"/>
        <KeyWord name="drawRectangle"/>
        <KeyWord name="driver"/>
        <KeyWord name="drop"/>
        <KeyWord name="east"/>
        <KeyWord name="echo"/>
        <KeyWord name="editObject"/>
        <KeyWord name="editorSetEventHandler"/>
        <KeyWord name="effectiveCommander"/>
        <KeyWord name="else"/>
        <KeyWord name="emptyPositions"/>
        <KeyWord name="enableAI"/>
        <KeyWord name="enableAIFeature"/>
        <KeyWord name="enableAttack"/>
        <KeyWord name="enableAutoStartUpRTD"/>
        <KeyWord name="enableAutoTrimRTD"/>
        <KeyWord name="enableCamShake"/>
        <KeyWord name="enableCaustics"/>
        <KeyWord name="enableCollisionWith"/>
        <KeyWord name="enableCopilot"/>
        <KeyWord name="enableDebriefingStats"/>
        <KeyWord name="enableDiagLegend"/>
        <KeyWord name="enableEndDialog"/>
        <KeyWord name="enableEngineArtillery"/>
        <KeyWord name="enableEnvironment"/>
        <KeyWord name="enableFatigue"/>
        <KeyWord name="enableGunLights"/>
        <KeyWord name="enableIRLasers"/>
        <KeyWord name="enableMimics"/>
        <KeyWord name="enablePersonTurret"/>
        <KeyWord name="enableRadio"/>
        <KeyWord name="enableReload"/>
        <KeyWord name="enableRopeAttach"/>
        <KeyWord name="enableSatNormalOnDetail"/>
        <KeyWord name="enableSaving"/>
        <KeyWord name="enableSentences"/>
        <KeyWord name="enableSimulation"/>
        <KeyWord name="enableSimulationGlobal"/>
        <KeyWord name="enableTeamSwitch"/>
        <KeyWord name="enableUAVConnectability"/>
        <KeyWord name="endLoadingScreen"/>
        <KeyWord name="endMission"/>
        <KeyWord name="engineOn"/>
        <KeyWord name="enginesIsOnRTD"/>
        <KeyWord name="enginesRpmRTD"/>
        <KeyWord name="enginesTorqueRTD"/>
        <KeyWord name="entities"/>
        <KeyWord name="estimatedEndServerTime"/>
        <KeyWord name="estimatedTimeLeft"/>
        <KeyWord name="evalObjectArgument"/>
        <KeyWord name="everyBackpack"/>
        <KeyWord name="everyContainer"/>
        <KeyWord name="exec"/>
        <KeyWord name="execEditorScript"/>
        <KeyWord name="execFSM"/>
        <KeyWord name="execVM"/>
        <KeyWord name="exit"/>
        <KeyWord name="exitWith"/>
        <KeyWord name="exp"/>
        <KeyWord name="expectedDestination"/>
        <KeyWord name="eyeDirection"/>
        <KeyWord name="eyePos"/>
        <KeyWord name="face"/>
        <KeyWord name="faction"/>
        <KeyWord name="fadeMusic"/>
        <KeyWord name="fadeRadio"/>
        <KeyWord name="fadeSound"/>
        <KeyWord name="fadeSpeech"/>
        <KeyWord name="failMission"/>
        <KeyWord name="fillWeaponsFromPool"/>
        <KeyWord name="find"/>
        <KeyWord name="findCover"/>
        <KeyWord name="findDisplay"/>
        <KeyWord name="findEditorObject"/>
        <KeyWord name="findEmptyPosition"/>
        <KeyWord name="findEmptyPositionReady"/>
        <KeyWord name="findNearestEnemy"/>
        <KeyWord name="finishMissionInit"/>
        <KeyWord name="finite"/>
        <KeyWord name="fire"/>
        <KeyWord name="fireAtTarget"/>
        <KeyWord name="firstBackpack"/>
        <KeyWord name="flag"/>
        <KeyWord name="flagOwner"/>
        <KeyWord name="fleeing"/>
        <KeyWord name="floor"/>
        <KeyWord name="flyInHeight"/>
        <KeyWord name="fog"/>
        <KeyWord name="fogForecast"/>
        <KeyWord name="fogParams"/>
        <KeyWord name="for"/>
        <KeyWord name="forEach"/>
        <KeyWord name="forEachMember"/>
        <KeyWord name="forEachMemberAgent"/>
        <KeyWord name="forEachMemberTeam"/>
        <KeyWord name="forceAddUniform"/>
        <KeyWord name="forceEnd"/>
        <KeyWord name="forceMap"/>
        <KeyWord name="forceRespawn"/>
        <KeyWord name="forceSpeed"/>
        <KeyWord name="forceWalk"/>
        <KeyWord name="forceWeaponFire"/>
        <KeyWord name="forceWeatherChange"/>
        <KeyWord name="formLeader"/>
        <KeyWord name="format"/>
        <KeyWord name="formatText"/>
        <KeyWord name="formation"/>
        <KeyWord name="formationDirection"/>
        <KeyWord name="formationLeader"/>
        <KeyWord name="formationMembers"/>
        <KeyWord name="formationPosition"/>
        <KeyWord name="formationTask"/>
        <KeyWord name="freeLook"/>
        <KeyWord name="from"/>
        <KeyWord name="fromEditor"/>
        <KeyWord name="fuel"/>
        <KeyWord name="fullCrew"/>
        <KeyWord name="gearSlotAmmoCount"/>
        <KeyWord name="gearSlotData"/>
        <KeyWord name="getAmmoCargo"/>
        <KeyWord name="getArray"/>
        <KeyWord name="getArtilleryAmmo"/>
        <KeyWord name="getArtilleryComputerSettings"/>
        <KeyWord name="getArtilleryETA"/>
        <KeyWord name="getAssignedCuratorLogic"/>
        <KeyWord name="getAssignedCuratorUnit"/>
        <KeyWord name="getBackpackCargo"/>
        <KeyWord name="getBleedingRemaining"/>
        <KeyWord name="getBurningValue"/>
        <KeyWord name="getCargoIndex"/>
        <KeyWord name="getCenterOfMass"/>
        <KeyWord name="getClientState"/>
        <KeyWord name="getConnectedUav"/>
        <KeyWord name="getDLCs"/>
        <KeyWord name="getDammage"/>
        <KeyWord name="getDescription"/>
        <KeyWord name="getDir"/>
        <KeyWord name="getDirVisual"/>
        <KeyWord name="getEditorCamera"/>
        <KeyWord name="getEditorMode"/>
        <KeyWord name="getEditorObjectScope"/>
        <KeyWord name="getElevationOffset"/>
        <KeyWord name="getFSMVariable"/>
        <KeyWord name="getFatigue"/>
        <KeyWord name="getFriend"/>
        <KeyWord name="getFuelCargo"/>
        <KeyWord name="getGroupIcon"/>
        <KeyWord name="getGroupIconParams"/>
        <KeyWord name="getGroupIcons"/>
        <KeyWord name="getHideFrom"/>
        <KeyWord name="getHit"/>
        <KeyWord name="getHitPointDamage"/>
        <KeyWord name="getItemCargo"/>
        <KeyWord name="getMagazineCargo"/>
        <KeyWord name="getMarkerColor"/>
        <KeyWord name="getMarkerPos"/>
        <KeyWord name="getMarkerSize"/>
        <KeyWord name="getMarkerType"/>
        <KeyWord name="getMass"/>
        <KeyWord name="getNumber"/>
        <KeyWord name="getObjectArgument"/>
        <KeyWord name="getObjectChildren"/>
        <KeyWord name="getObjectDLC"/>
        <KeyWord name="getObjectDLCs"/>
        <KeyWord name="getObjectMaterials"/>
        <KeyWord name="getObjectProxy"/>
        <KeyWord name="getObjectTextures"/>
        <KeyWord name="getObjectTextures"/>
        <KeyWord name="getOxygenRemaining"/>
        <KeyWord name="getPersonUsedDLCs"/>
        <KeyWord name="getPlayerUID"/>
        <KeyWord name="getPos"/>
        <KeyWord name="getPosASL"/>
        <KeyWord name="getPosASLVisual"/>
        <KeyWord name="getPosASLW"/>
        <KeyWord name="getPosATL"/>
        <KeyWord name="getPosATLVisual"/>
        <KeyWord name="getPosVisual"/>
        <KeyWord name="getPosWorld"/>
        <KeyWord name="getRepairCargo"/>
        <KeyWord name="getResolution"/>
        <KeyWord name="getShadowDistance"/>
        <KeyWord name="getSlingLoad"/>
        <KeyWord name="getSpeed"/>
        <KeyWord name="getTerrainHeightASL"/>
        <KeyWord name="getText"/>
        <KeyWord name="getVariable"/>
        <KeyWord name="getWPPos"/>
        <KeyWord name="getWeaponCargo"/>
        <KeyWord name="glanceAt"/>
        <KeyWord name="globalChat"/>
        <KeyWord name="globalRadio"/>
        <KeyWord name="goggles"/>
        <KeyWord name="group"/>
        <KeyWord name="groupChat"/>
        <KeyWord name="groupFromNetId"/>
        <KeyWord name="groupID"/>
        <KeyWord name="groupIconSelectable"/>
        <KeyWord name="groupIconsVisible"/>
        <KeyWord name="groupRadio"/>
        <KeyWord name="groupSelectUnit"/>
        <KeyWord name="groupSelectedUnits"/>
        <KeyWord name="grpNull"/>
        <KeyWord name="gunner"/>
        <KeyWord name="gusts"/>
        <KeyWord name="halt"/>
        <KeyWord name="handgunItems"/>
        <KeyWord name="handgunMagazine"/>
        <KeyWord name="handgunWeapon"/>
        <KeyWord name="handsHit"/>
        <KeyWord name="hasInterface"/>
        <KeyWord name="hasWeapon"/>
        <KeyWord name="hcAllGroups"/>
        <KeyWord name="hcGroupParams"/>
        <KeyWord name="hcLeader"/>
        <KeyWord name="hcRemoveAllGroups"/>
        <KeyWord name="hcRemoveGroup"/>
        <KeyWord name="hcSelectGroup"/>
        <KeyWord name="hcSelected"/>
        <KeyWord name="hcSetGroup"/>
        <KeyWord name="hcShowBar"/>
        <KeyWord name="hcShownBar"/>
        <KeyWord name="headgear"/>
        <KeyWord name="hideBody"/>
        <KeyWord name="hideObject"/>
        <KeyWord name="hideObjectGlobal"/>
        <KeyWord name="hint"/>
        <KeyWord name="hintC"/>
        <KeyWord name="hintCadet"/>
        <KeyWord name="hintSilent"/>
        <KeyWord name="hmd"/>
        <KeyWord name="hostMission"/>
        <KeyWord name="htmlLoad"/>
        <KeyWord name="humidity"/>
        <KeyWord name="if"/>
        <KeyWord name="image"/>
        <KeyWord name="importAllGroups"/>
        <KeyWord name="importance"/>
        <KeyWord name="in"/>
        <KeyWord name="inGameUISetEventHandler"/>
        <KeyWord name="inRangeOfArtillery"/>
        <KeyWord name="incapacitatedState"/>
        <KeyWord name="independent"/>
        <KeyWord name="inflame"/>
        <KeyWord name="inflamed"/>
        <KeyWord name="inheritsFrom"/>
        <KeyWord name="initAmbientLife"/>
        <KeyWord name="inputAction"/>
        <KeyWord name="insertEditorObject"/>
        <KeyWord name="intersect"/>
        <KeyWord name="isAbleToBreathe"/>
        <KeyWord name="isAgent"/>
        <KeyWord name="isArray"/>
        <KeyWord name="isAutoHoverOn"/>
        <KeyWord name="isAutonomous"/>
        <KeyWord name="isAutotest"/>
        <KeyWord name="isBleeding"/>
        <KeyWord name="isBurning"/>
        <KeyWord name="isClass"/>
        <KeyWord name="isCollisionLightOn"/>
        <KeyWord name="isCopilotEnabled"/>
        <KeyWord name="isDLCAvailable"/>
        <KeyWord name="isDedicated"/>
        <KeyWord name="isEngineOn"/>
        <KeyWord name="isEqualTo"/>
        <KeyWord name="isFlashlightOn"/>
        <KeyWord name="isFlatEmpty"/>
        <KeyWord name="isForcedWalk"/>
        <KeyWord name="isFormationLeader"/>
        <KeyWord name="isHidden"/>
        <KeyWord name="isIRLaserOn"/>
        <KeyWord name="isInRemainsCollector"/>
        <KeyWord name="isInstructorFigureEnabled"/>
        <KeyWord name="isKeyActive"/>
        <KeyWord name="isKindOf"/>
        <KeyWord name="isLightOn"/>
        <KeyWord name="isLocalized"/>
        <KeyWord name="isManualFire"/>
        <KeyWord name="isMarkedForCollection"/>
        <KeyWord name="isMultiplayer"/>
        <KeyWord name="isNil"/>
        <KeyWord name="isNull"/>
        <KeyWord name="isNumber"/>
        <KeyWord name="isObjectRTD"/>
        <KeyWord name="isOnRoad"/>
        <KeyWord name="isPipEnabled"/>
        <KeyWord name="isPlayer"/>
        <KeyWord name="isRealTime"/>
        <KeyWord name="isServer"/>
        <KeyWord name="isShowing3DIcons"/>
        <KeyWord name="isSteamMission"/>
        <KeyWord name="isStreamFriendlyUIEnabled"/>
        <KeyWord name="isText"/>
        <KeyWord name="isTouchingGround"/>
        <KeyWord name="isTutHintsEnabled"/>
        <KeyWord name="isUAVConnectable"/>
        <KeyWord name="isUavConnected"/>
        <KeyWord name="isUniformAllowed"/>
        <KeyWord name="isWalking"/>
        <KeyWord name="itemCargo"/>
        <KeyWord name="items"/>
        <KeyWord name="itemsWithMagazines"/>
        <KeyWord name="join"/>
        <KeyWord name="joinAs"/>
        <KeyWord name="joinAsSilent"/>
        <KeyWord name="joinSilent"/>
        <KeyWord name="kbAddDatabase"/>
        <KeyWord name="kbAddDatabaseTargets"/>
        <KeyWord name="kbAddTopic"/>
        <KeyWord name="kbHasTopic"/>
        <KeyWord name="kbReact"/>
        <KeyWord name="kbRemoveTopic"/>
        <KeyWord name="kbTell"/>
        <KeyWord name="kbWasSaid"/>
        <KeyWord name="keyImage"/>
        <KeyWord name="keyName"/>
        <KeyWord name="knowsAbout"/>
        <KeyWord name="land"/>
        <KeyWord name="landAt"/>
        <KeyWord name="landResult"/>
        <KeyWord name="language"/>
        <KeyWord name="laserTarget"/>
        <KeyWord name="lbAdd"/>
        <KeyWord name="lbClear"/>
        <KeyWord name="lbColor"/>
        <KeyWord name="lbCurSel"/>
        <KeyWord name="lbData"/>
        <KeyWord name="lbDelete"/>
        <KeyWord name="lbIsSelected"/>
        <KeyWord name="lbPicture"/>
        <KeyWord name="lbSelection"/>
        <KeyWord name="lbSetColor"/>
        <KeyWord name="lbSetCurSel"/>
        <KeyWord name="lbSetData"/>
        <KeyWord name="lbSetPicture"/>
        <KeyWord name="lbSetSelected"/>
        <KeyWord name="lbSetTooltip"/>
        <KeyWord name="lbSetValue"/>
        <KeyWord name="lbSize"/>
        <KeyWord name="lbSort"/>
        <KeyWord name="lbSortByValue"/>
        <KeyWord name="lbText"/>
        <KeyWord name="lbValue"/>
        <KeyWord name="leader"/>
        <KeyWord name="leaveVehicle"/>
        <KeyWord name="libraryCredits"/>
        <KeyWord name="libraryDisclaimers"/>
        <KeyWord name="lifeState"/>
        <KeyWord name="lightAttachObject"/>
        <KeyWord name="lightDetachObject"/>
        <KeyWord name="lightIsOn"/>
        <KeyWord name="lightnings"/>
        <KeyWord name="limitSpeed"/>
        <KeyWord name="lineBreak"/>
        <KeyWord name="lineIntersects"/>
        <KeyWord name="lineIntersectsObjs"/>
        <KeyWord name="lineIntersectsWith"/>
        <KeyWord name="linearConversion"/>
        <KeyWord name="linkItem"/>
        <KeyWord name="list"/>
        <KeyWord name="listObjects"/>
        <KeyWord name="ln"/>
        <KeyWord name="lnbAddArray"/>
        <KeyWord name="lnbAddColumn"/>
        <KeyWord name="lnbAddRow"/>
        <KeyWord name="lnbClear"/>
        <KeyWord name="lnbColor"/>
        <KeyWord name="lnbCurSelRow"/>
        <KeyWord name="lnbData"/>
        <KeyWord name="lnbDeleteColumn"/>
        <KeyWord name="lnbDeleteRow"/>
        <KeyWord name="lnbGetColumnsPosition"/>
        <KeyWord name="lnbPicture"/>
        <KeyWord name="lnbSetColor"/>
        <KeyWord name="lnbSetCurSelRow"/>
        <KeyWord name="lnbSetData"/>
        <KeyWord name="lnbSetPicture"/>
        <KeyWord name="lnbSetText"/>
        <KeyWord name="lnbSetValue"/>
        <KeyWord name="lnbSize"/>
        <KeyWord name="lnbText"/>
        <KeyWord name="lnbValue"/>
        <KeyWord name="lnbsetColumnsPos"/>
        <KeyWord name="load"/>
        <KeyWord name="loadAbs"/>
        <KeyWord name="loadBackpack"/>
        <KeyWord name="loadFile"/>
        <KeyWord name="loadGame"/>
        <KeyWord name="loadIdentity"/>
        <KeyWord name="loadMagazine"/>
        <KeyWord name="loadOverlay"/>
        <KeyWord name="loadStatus"/>
        <KeyWord name="loadUniform"/>
        <KeyWord name="loadVest"/>
        <KeyWord name="local"/>
        <KeyWord name="localize"/>
        <KeyWord name="locationNull"/>
        <KeyWord name="locationPosition"/>
        <KeyWord name="lock"/>
        <KeyWord name="lockCameraTo"/>
        <KeyWord name="lockCargo"/>
        <KeyWord name="lockDriver"/>
        <KeyWord name="lockTurret"/>
        <KeyWord name="lockWp"/>
        <KeyWord name="locked"/>
        <KeyWord name="lockedCargo"/>
        <KeyWord name="lockedDriver"/>
        <KeyWord name="lockedTurret"/>
        <KeyWord name="log"/>
        <KeyWord name="logEntities"/>
        <KeyWord name="lookAt"/>
        <KeyWord name="lookAtPos"/>
        <KeyWord name="magazineCargo"/>
        <KeyWord name="magazineTurretAmmo"/>
        <KeyWord name="magazines"/>
        <KeyWord name="magazinesAmmo"/>
        <KeyWord name="magazinesAmmoCargo"/>
        <KeyWord name="magazinesAmmoFull"/>
        <KeyWord name="magazinesDetail"/>
        <KeyWord name="magazinesDetailBackpack"/>
        <KeyWord name="magazinesDetailUniform"/>
        <KeyWord name="magazinesDetailVest"/>
        <KeyWord name="magazinesTurret"/>
        <KeyWord name="mapAnimAdd"/>
        <KeyWord name="mapAnimClear"/>
        <KeyWord name="mapAnimCommit"/>
        <KeyWord name="mapAnimDone"/>
        <KeyWord name="mapCenterOnCamera"/>
        <KeyWord name="mapGridPosition"/>
        <KeyWord name="markAsFinishedOnSteam"/>
        <KeyWord name="markerAlpha"/>
        <KeyWord name="markerBrush"/>
        <KeyWord name="markerColor"/>
        <KeyWord name="markerDir"/>
        <KeyWord name="markerPos"/>
        <KeyWord name="markerShape"/>
        <KeyWord name="markerSize"/>
        <KeyWord name="markerText"/>
        <KeyWord name="markerType"/>
        <KeyWord name="max"/>
        <KeyWord name="members"/>
        <KeyWord name="min"/>
        <KeyWord name="mineActive"/>
        <KeyWord name="mineDetectedBy"/>
        <KeyWord name="missionConfigFile"/>
        <KeyWord name="missionName"/>
        <KeyWord name="missionNamespace"/>
        <KeyWord name="missionStart"/>
        <KeyWord name="mod"/>
        <KeyWord name="modelToWorld"/>
        <KeyWord name="modelToWorldVisual"/>
        <KeyWord name="moonIntensity"/>
        <KeyWord name="morale"/>
        <KeyWord name="move"/>
        <KeyWord name="moveInAny"/>
        <KeyWord name="moveInCargo"/>
        <KeyWord name="moveInCommander"/>
        <KeyWord name="moveInDriver"/>
        <KeyWord name="moveInGunner"/>
        <KeyWord name="moveInTurret"/>
        <KeyWord name="moveObjectToEnd"/>
        <KeyWord name="moveOut"/>
        <KeyWord name="moveTime"/>
        <KeyWord name="moveTo"/>
        <KeyWord name="moveToCompleted"/>
        <KeyWord name="moveToFailed"/>
        <KeyWord name="musicVolume"/>
        <KeyWord name="nMenuItems"/>
        <KeyWord name="name"/>
        <KeyWord name="nameSound"/>
        <KeyWord name="nearEntities"/>
        <KeyWord name="nearObjects"/>
        <KeyWord name="nearObjectsReady"/>
        <KeyWord name="nearRoads"/>
        <KeyWord name="nearSupplies"/>
        <KeyWord name="nearTargets"/>
        <KeyWord name="nearestBuilding"/>
        <KeyWord name="nearestLocation"/>
        <KeyWord name="nearestLocationWithDubbing"/>
        <KeyWord name="nearestLocations"/>
        <KeyWord name="nearestObject"/>
        <KeyWord name="nearestObjects"/>
        <KeyWord name="needReload"/>
        <KeyWord name="netId"/>
        <KeyWord name="netObjNull"/>
        <KeyWord name="newOverlay"/>
        <KeyWord name="nextMenuItemIndex"/>
        <KeyWord name="nextWeatherChange"/>
        <KeyWord name="nil"/>
        <KeyWord name="not"/>
        <KeyWord name="numberOfEnginesRTD"/>
        <KeyWord name="numberToDate"/>
        <KeyWord name="objNull"/>
        <KeyWord name="objStatus"/>
        <KeyWord name="objectCurators"/>
        <KeyWord name="objectFromNetId"/>
        <KeyWord name="onBriefingGroup"/>
        <KeyWord name="onBriefingNotes"/>
        <KeyWord name="onBriefingPlan"/>
        <KeyWord name="onBriefingTeamSwitch"/>
        <KeyWord name="onCommandModeChanged"/>
        <KeyWord name="onDoubleClick"/>
        <KeyWord name="onEachFrame"/>
        <KeyWord name="onGroupIconClick"/>
        <KeyWord name="onGroupIconOverEnter"/>
        <KeyWord name="onGroupIconOverLeave"/>
        <KeyWord name="onHCGroupSelectionChanged"/>
        <KeyWord name="onMapSingleClick"/>
        <KeyWord name="onPlayerConnected"/>
        <KeyWord name="onPlayerDisconnected"/>
        <KeyWord name="onPreloadFinished"/>
        <KeyWord name="onPreloadStarted"/>
        <KeyWord name="onShowNewObject"/>
        <KeyWord name="onTeamSwitch"/>
        <KeyWord name="openCuratorInterface"/>
        <KeyWord name="openMap"/>
        <KeyWord name="openYoutubeVideo"/>
        <KeyWord name="opfor"/>
        <KeyWord name="or"/>
        <KeyWord name="orderGetIn"/>
        <KeyWord name="overcast"/>
        <KeyWord name="overcastForecast"/>
        <KeyWord name="owner"/>
        <KeyWord name="parseNumber"/>
        <KeyWord name="parseText"/>
        <KeyWord name="parsingNamespace"/>
        <KeyWord name="particlesQuality"/>
        <KeyWord name="pi"/>
        <KeyWord name="pickWeaponPool"/>
        <KeyWord name="pitch"/>
        <KeyWord name="playAction"/>
        <KeyWord name="playActionNow"/>
        <KeyWord name="playGesture"/>
        <KeyWord name="playMission"/>
        <KeyWord name="playMove"/>
        <KeyWord name="playMoveNow"/>
        <KeyWord name="playMusic"/>
        <KeyWord name="playScriptedMission"/>
        <KeyWord name="playSound"/>
        <KeyWord name="playSound3D"/>
        <KeyWord name="playableSlotsNumber"/>
        <KeyWord name="playableUnits"/>
        <KeyWord name="player"/>
        <KeyWord name="playerRespawnTime"/>
        <KeyWord name="playerSide"/>
        <KeyWord name="playersNumber"/>
        <KeyWord name="posScreenToWorld"/>
        <KeyWord name="posWorldToScreen"/>
        <KeyWord name="position"/>
        <KeyWord name="positionCameraToWorld"/>
        <KeyWord name="ppEffectAdjust"/>
        <KeyWord name="ppEffectCommit"/>
        <KeyWord name="ppEffectCommitted"/>
        <KeyWord name="ppEffectCreate"/>
        <KeyWord name="ppEffectDestroy"/>
        <KeyWord name="ppEffectEnable"/>
        <KeyWord name="ppEffectForceInNVG"/>
        <KeyWord name="precision"/>
        <KeyWord name="preloadCamera"/>
        <KeyWord name="preloadObject"/>
        <KeyWord name="preloadSound"/>
        <KeyWord name="preloadTitleObj"/>
        <KeyWord name="preloadTitleRsc"/>
        <KeyWord name="preprocessFile"/>
        <KeyWord name="preprocessFileLineNumbers"/>
        <KeyWord name="primaryWeapon"/>
        <KeyWord name="primaryWeaponItems"/>
        <KeyWord name="primaryWeaponMagazine"/>
        <KeyWord name="priority"/>
        <KeyWord name="private"/>
        <KeyWord name="processDiaryLink"/>
        <KeyWord name="productVersion"/>
        <KeyWord name="profileName"/>
        <KeyWord name="profileNamespace"/>
        <KeyWord name="progressLoadingScreen"/>
        <KeyWord name="progressPosition"/>
        <KeyWord name="progressSetPosition"/>
        <KeyWord name="publicVariable"/>
        <KeyWord name="publicVariableClient"/>
        <KeyWord name="publicVariableServer"/>
        <KeyWord name="pushBack"/>
        <KeyWord name="putWeaponPool"/>
        <KeyWord name="queryItemsPool"/>
        <KeyWord name="queryMagazinePool"/>
        <KeyWord name="queryWeaponPool"/>
        <KeyWord name="rad"/>
        <KeyWord name="radioChannelAdd"/>
        <KeyWord name="radioChannelCreate"/>
        <KeyWord name="radioChannelRemove"/>
        <KeyWord name="radioChannelSetCallSign"/>
        <KeyWord name="radioChannelSetLabel"/>
        <KeyWord name="radioVolume"/>
        <KeyWord name="rain"/>
        <KeyWord name="rainbow"/>
        <KeyWord name="random"/>
        <KeyWord name="rank"/>
        <KeyWord name="rankId"/>
        <KeyWord name="rating"/>
        <KeyWord name="rectangular"/>
        <KeyWord name="registerTask"/>
        <KeyWord name="registeredTasks"/>
        <KeyWord name="reload"/>
        <KeyWord name="reloadEnabled"/>
        <KeyWord name="remoteControl"/>
        <KeyWord name="removeAction"/>
        <KeyWord name="removeAllActions"/>
        <KeyWord name="removeAllAssignedItems"/>
        <KeyWord name="removeAllContainers"/>
        <KeyWord name="removeAllCuratorAddons"/>
        <KeyWord name="removeAllCuratorCameraAreas"/>
        <KeyWord name="removeAllCuratorEditingAreas"/>
        <KeyWord name="removeAllEventHandlers"/>
        <KeyWord name="removeAllHandgunItems"/>
        <KeyWord name="removeAllItems"/>
        <KeyWord name="removeAllItemsWithMagazines"/>
        <KeyWord name="removeAllMPEventHandlers"/>
        <KeyWord name="removeAllMissionEventHandlers"/>
        <KeyWord name="removeAllMusicEventHandlers"/>
        <KeyWord name="removeAllPrimaryWeaponItems"/>
        <KeyWord name="removeAllWeapons"/>
        <KeyWord name="removeBackpack"/>
        <KeyWord name="removeBackpackGlobal"/>
        <KeyWord name="removeCuratorAddons"/>
        <KeyWord name="removeCuratorCameraArea"/>
        <KeyWord name="removeCuratorEditableObjects"/>
        <KeyWord name="removeCuratorEditingArea"/>
        <KeyWord name="removeDrawIcon"/>
        <KeyWord name="removeDrawLinks"/>
        <KeyWord name="removeEventHandler"/>
        <KeyWord name="removeFromRemainsCollector"/>
        <KeyWord name="removeGoggles"/>
        <KeyWord name="removeGroupIcon"/>
        <KeyWord name="removeHandgunItem"/>
        <KeyWord name="removeHeadgear"/>
        <KeyWord name="removeItem"/>
        <KeyWord name="removeItemFromBackpack"/>
        <KeyWord name="removeItemFromUniform"/>
        <KeyWord name="removeItemFromVest"/>
        <KeyWord name="removeItems"/>
        <KeyWord name="removeMPEventHandler"/>
        <KeyWord name="removeMagazine"/>
        <KeyWord name="removeMagazineGlobal"/>
        <KeyWord name="removeMagazineTurret"/>
        <KeyWord name="removeMagazines"/>
        <KeyWord name="removeMagazinesTurret"/>
        <KeyWord name="removeMenuItem"/>
        <KeyWord name="removeMissionEventHandler"/>
        <KeyWord name="removeMusicEventHandler"/>
        <KeyWord name="removePrimaryWeaponItem"/>
        <KeyWord name="removeSecondaryWeaponItem"/>
        <KeyWord name="removeSimpleTask"/>
        <KeyWord name="removeSwitchableUnit"/>
        <KeyWord name="removeTeamMember"/>
        <KeyWord name="removeUniform"/>
        <KeyWord name="removeVest"/>
        <KeyWord name="removeWeapon"/>
        <KeyWord name="removeWeaponGlobal"/>
        <KeyWord name="removeWeaponTurret"/>
        <KeyWord name="requiredVersion"/>
        <KeyWord name="resetCamShake"/>
        <KeyWord name="resetSubgroupDirection"/>
        <KeyWord name="resistance"/>
        <KeyWord name="resize"/>
        <KeyWord name="resources"/>
        <KeyWord name="respawnVehicle"/>
        <KeyWord name="restartEditorCamera"/>
        <KeyWord name="reveal"/>
        <KeyWord name="revealMine"/>
        <KeyWord name="reverse"/>
        <KeyWord name="reversedMouseY"/>
        <KeyWord name="roadsConnectedTo"/>
        <KeyWord name="ropeAttachEnabled"/>
        <KeyWord name="ropeAttachTo"/>
        <KeyWord name="ropeAttachedObjects"/>
        <KeyWord name="ropeAttachedTo"/>
        <KeyWord name="ropeCreate"/>
        <KeyWord name="ropeCut"/>
        <KeyWord name="ropeDestroy"/>
        <KeyWord name="ropeDetach"/>
        <KeyWord name="ropeEndPosition"/>
        <KeyWord name="ropeLength"/>
        <KeyWord name="ropeUnwind"/>
        <KeyWord name="ropeUnwound"/>
        <KeyWord name="ropes"/>
        <KeyWord name="rotorsForcesRTD"/>
        <KeyWord name="rotorsRpmRTD"/>
        <KeyWord name="round"/>
        <KeyWord name="runInitScript"/>
        <KeyWord name="safeZoneH"/>
        <KeyWord name="safeZoneW"/>
        <KeyWord name="safeZoneWAbs"/>
        <KeyWord name="safeZoneX"/>
        <KeyWord name="safeZoneXAbs"/>
        <KeyWord name="safeZoneY"/>
        <KeyWord name="saveGame"/>
        <KeyWord name="saveIdentity"/>
        <KeyWord name="saveJoysticks"/>
        <KeyWord name="saveOverlay"/>
        <KeyWord name="saveProfileNamespace"/>
        <KeyWord name="saveStatus"/>
        <KeyWord name="saveVar"/>
        <KeyWord name="savingEnabled"/>
        <KeyWord name="say"/>
        <KeyWord name="say2D"/>
        <KeyWord name="say3D"/>
        <KeyWord name="scopeName"/>
        <KeyWord name="score"/>
        <KeyWord name="scoreSide"/>
        <KeyWord name="screenToWorld"/>
        <KeyWord name="scriptDone"/>
        <KeyWord name="scriptName"/>
        <KeyWord name="scriptNull"/>
        <KeyWord name="scudState"/>
        <KeyWord name="secondaryWeapon"/>
        <KeyWord name="secondaryWeaponItems"/>
        <KeyWord name="secondaryWeaponMagazine"/>
        <KeyWord name="select"/>
        <KeyWord name="selectBestPlaces"/>
        <KeyWord name="selectDiarySubject"/>
        <KeyWord name="selectEditorObject"/>
        <KeyWord name="selectLeader"/>
        <KeyWord name="selectNoPlayer"/>
        <KeyWord name="selectPlayer"/>
        <KeyWord name="selectWeapon"/>
        <KeyWord name="selectWeaponTurret"/>
        <KeyWord name="selectedEditorObjects"/>
        <KeyWord name="selectionPosition"/>
        <KeyWord name="sendAUMessage"/>
        <KeyWord name="sendSimpleCommand"/>
        <KeyWord name="sendTask"/>
        <KeyWord name="sendTaskResult"/>
        <KeyWord name="sendUDPMessage"/>
        <KeyWord name="serverCommand"/>
        <KeyWord name="serverCommandAvailable"/>
        <KeyWord name="serverCommandExecutable"/>
        <KeyWord name="serverTime"/>
        <KeyWord name="set"/>
        <KeyWord name="setAccTime"/>
        <KeyWord name="setActualCollectiveRTD"/>
        <KeyWord name="setAirportSide"/>
        <KeyWord name="setAmmo"/>
        <KeyWord name="setAmmoCargo"/>
        <KeyWord name="setAperture"/>
        <KeyWord name="setApertureNew"/>
        <KeyWord name="setArmoryPoints"/>
        <KeyWord name="setAttributes"/>
        <KeyWord name="setAutonomous"/>
        <KeyWord name="setBehaviour"/>
        <KeyWord name="setBleedingRemaining"/>
        <KeyWord name="setBrakesRTD"/>
        <KeyWord name="setCamShakeDefParams"/>
        <KeyWord name="setCamShakeParams"/>
        <KeyWord name="setCamUseTi"/>
        <KeyWord name="setCameraInterest"/>
        <KeyWord name="setCaptive"/>
        <KeyWord name="setCenterOfMass"/>
        <KeyWord name="setCollisionLight"/>
        <KeyWord name="setCombatMode"/>
        <KeyWord name="setCompassOscillation"/>
        <KeyWord name="setCuratorCameraAreaCeiling"/>
        <KeyWord name="setCuratorCoef"/>
        <KeyWord name="setCuratorEditingAreaType"/>
        <KeyWord name="setCuratorWaypointCost"/>
        <KeyWord name="setCurrentTask"/>
        <KeyWord name="setCurrentWaypoint"/>
        <KeyWord name="setCustomWeightRTD"/>
        <KeyWord name="setDamage"/>
        <KeyWord name="setDammage"/>
        <KeyWord name="setDate"/>
        <KeyWord name="setDebriefingText"/>
        <KeyWord name="setDefaultCamera"/>
        <KeyWord name="setDestination"/>
        <KeyWord name="setDir"/>
        <KeyWord name="setDirection"/>
        <KeyWord name="setDrawIcon"/>
        <KeyWord name="setDropInterval"/>
        <KeyWord name="setEditorMode"/>
        <KeyWord name="setEditorObjectScope"/>
        <KeyWord name="setEffectCondition"/>
        <KeyWord name="setEngineRPMRTD"/>
        <KeyWord name="setFSMVariable"/>
        <KeyWord name="setFace"/>
        <KeyWord name="setFaceAnimation"/>
        <KeyWord name="setFatigue"/>
        <KeyWord name="setFlagOwner"/>
        <KeyWord name="setFlagSide"/>
        <KeyWord name="setFlagTexture"/>
        <KeyWord name="setFog"/>
        <KeyWord name="setFormDir"/>
        <KeyWord name="setFormation"/>
        <KeyWord name="setFormationTask"/>
        <KeyWord name="setFriend"/>
        <KeyWord name="setFromEditor"/>
        <KeyWord name="setFuel"/>
        <KeyWord name="setFuelCargo"/>
        <KeyWord name="setGroupIcon"/>
        <KeyWord name="setGroupIconParams"/>
        <KeyWord name="setGroupIconsSelectable"/>
        <KeyWord name="setGroupIconsVisible"/>
        <KeyWord name="setGroupId"/>
        <KeyWord name="setGusts"/>
        <KeyWord name="setHUDMovementLevels"/>
        <KeyWord name="setHideBehind"/>
        <KeyWord name="setHit"/>
        <KeyWord name="setHitPointDamage"/>
        <KeyWord name="setHorizonParallaxCoef"/>
        <KeyWord name="setIdentity"/>
        <KeyWord name="setImportance"/>
        <KeyWord name="setLeader"/>
        <KeyWord name="setLightAmbient"/>
        <KeyWord name="setLightAttenuation"/>
        <KeyWord name="setLightBrightness"/>
        <KeyWord name="setLightColor"/>
        <KeyWord name="setLightDayLight"/>
        <KeyWord name="setLightFlareMaxDistance"/>
        <KeyWord name="setLightFlareSize"/>
        <KeyWord name="setLightIntensity"/>
        <KeyWord name="setLightUseFlare"/>
        <KeyWord name="setLightnings"/>
        <KeyWord name="setLocalWindParams"/>
        <KeyWord name="setMagazineTurretAmmo"/>
        <KeyWord name="setMarkerAlpha"/>
        <KeyWord name="setMarkerAlphaLocal"/>
        <KeyWord name="setMarkerBrush"/>
        <KeyWord name="setMarkerBrushLocal"/>
        <KeyWord name="setMarkerColor"/>
        <KeyWord name="setMarkerColorLocal"/>
        <KeyWord name="setMarkerDir"/>
        <KeyWord name="setMarkerDirLocal"/>
        <KeyWord name="setMarkerPos"/>
        <KeyWord name="setMarkerPosLocal"/>
        <KeyWord name="setMarkerShape"/>
        <KeyWord name="setMarkerShapeLocal"/>
        <KeyWord name="setMarkerSize"/>
        <KeyWord name="setMarkerSizeLocal"/>
        <KeyWord name="setMarkerText"/>
        <KeyWord name="setMarkerTextLocal"/>
        <KeyWord name="setMarkerType"/>
        <KeyWord name="setMarkerTypeLocal"/>
        <KeyWord name="setMass"/>
        <KeyWord name="setMimic"/>
        <KeyWord name="setMousePosition"/>
        <KeyWord name="setMusicEffect"/>
        <KeyWord name="setMusicEventHandler"/>
        <KeyWord name="setName"/>
        <KeyWord name="setNameSound"/>
        <KeyWord name="setObjectArguments"/>
        <KeyWord name="setObjectMaterial"/>
        <KeyWord name="setObjectProxy"/>
        <KeyWord name="setObjectTexture"/>
        <KeyWord name="setObjectTextureGlobal"/>
        <KeyWord name="setObjectViewDistance"/>
        <KeyWord name="setOvercast"/>
        <KeyWord name="setOwner"/>
        <KeyWord name="setOxygenRemaining"/>
        <KeyWord name="setParticleCircle"/>
        <KeyWord name="setParticleClass"/>
        <KeyWord name="setParticleFire"/>
        <KeyWord name="setParticleParams"/>
        <KeyWord name="setParticleRandom"/>
        <KeyWord name="setPiPEffect"/>
        <KeyWord name="setPilotLight"/>
        <KeyWord name="setPitch"/>
        <KeyWord name="setPlayable"/>
        <KeyWord name="setPlayerRespawnTime"/>
        <KeyWord name="setPos"/>
        <KeyWord name="setPosASL"/>
        <KeyWord name="setPosASL2"/>
        <KeyWord name="setPosASLW"/>
        <KeyWord name="setPosATL"/>
        <KeyWord name="setPosWorld"/>
        <KeyWord name="setPosition"/>
        <KeyWord name="setRadioMsg"/>
        <KeyWord name="setRain"/>
        <KeyWord name="setRainbow"/>
        <KeyWord name="setRandomLip"/>
        <KeyWord name="setRank"/>
        <KeyWord name="setRectangular"/>
        <KeyWord name="setRepairCargo"/>
        <KeyWord name="setRotorBrakeRTD"/>
        <KeyWord name="setShadowDistance"/>
        <KeyWord name="setSide"/>
        <KeyWord name="setSimpleTaskDescription"/>
        <KeyWord name="setSimpleTaskDestination"/>
        <KeyWord name="setSimpleTaskTarget"/>
        <KeyWord name="setSimulWeatherLayers"/>
        <KeyWord name="setSize"/>
        <KeyWord name="setSkill"/>
        <KeyWord name="setSlingLoad"/>
        <KeyWord name="setSoundEffect"/>
        <KeyWord name="setSpeaker"/>
        <KeyWord name="setSpeech"/>
        <KeyWord name="setSpeedMode"/>
        <KeyWord name="setStatValue"/>
        <KeyWord name="setSystemOfUnits"/>
        <KeyWord name="setTargetAge"/>
        <KeyWord name="setTaskResult"/>
        <KeyWord name="setTaskState"/>
        <KeyWord name="setTerrainGrid"/>
        <KeyWord name="setText"/>
        <KeyWord name="setTimeMultiplier"/>
        <KeyWord name="setTitleEffect"/>
        <KeyWord name="setTriggerActivation"/>
        <KeyWord name="setTriggerArea"/>
        <KeyWord name="setTriggerStatements"/>
        <KeyWord name="setTriggerText"/>
        <KeyWord name="setTriggerTimeout"/>
        <KeyWord name="setTriggerType"/>
        <KeyWord name="setType"/>
        <KeyWord name="setUnconscious"/>
        <KeyWord name="setUnitAbility"/>
        <KeyWord name="setUnitPos"/>
        <KeyWord name="setUnitPosWeak"/>
        <KeyWord name="setUnitRank"/>
        <KeyWord name="setUnitRecoilCoefficient"/>
        <KeyWord name="setUnloadInCombat"/>
        <KeyWord name="setUserActionText"/>
        <KeyWord name="setVariable"/>
        <KeyWord name="setVectorDir"/>
        <KeyWord name="setVectorDirAndUp"/>
        <KeyWord name="setVectorUp"/>
        <KeyWord name="setVehicleAmmo"/>
        <KeyWord name="setVehicleAmmoDef"/>
        <KeyWord name="setVehicleArmor"/>
        <KeyWord name="setVehicleId"/>
        <KeyWord name="setVehicleLock"/>
        <KeyWord name="setVehiclePosition"/>
        <KeyWord name="setVehicleTiPars"/>
        <KeyWord name="setVehicleVarName"/>
        <KeyWord name="setVelocity"/>
        <KeyWord name="setVelocityTransformation"/>
        <KeyWord name="setViewDistance"/>
        <KeyWord name="setVisibleIfTreeCollapsed"/>
        <KeyWord name="setWPPos"/>
        <KeyWord name="setWantedRPMRTD"/>
        <KeyWord name="setWaves"/>
        <KeyWord name="setWaypointBehaviour"/>
        <KeyWord name="setWaypointCombatMode"/>
        <KeyWord name="setWaypointCompletionRadius"/>
        <KeyWord name="setWaypointDescription"/>
        <KeyWord name="setWaypointFormation"/>
        <KeyWord name="setWaypointHousePosition"/>
        <KeyWord name="setWaypointLoiterRadius"/>
        <KeyWord name="setWaypointLoiterType"/>
        <KeyWord name="setWaypointName"/>
        <KeyWord name="setWaypointPosition"/>
        <KeyWord name="setWaypointScript"/>
        <KeyWord name="setWaypointSpeed"/>
        <KeyWord name="setWaypointStatements"/>
        <KeyWord name="setWaypointTimeout"/>
        <KeyWord name="setWaypointType"/>
        <KeyWord name="setWaypointVisible"/>
        <KeyWord name="setWeaponReloadingTime"/>
        <KeyWord name="setWind"/>
        <KeyWord name="setWindDir"/>
        <KeyWord name="setWindForce"/>
        <KeyWord name="setWindStr"/>
        <KeyWord name="show3DIcons"/>
        <KeyWord name="showChat"/>
        <KeyWord name="showCinemaBorder"/>
        <KeyWord name="showCommandingMenu"/>
        <KeyWord name="showCompass"/>
        <KeyWord name="showCuratorCompass"/>
        <KeyWord name="showGPS"/>
        <KeyWord name="showHUD"/>
        <KeyWord name="showLegend"/>
        <KeyWord name="showMap"/>
        <KeyWord name="showNewEditorObject"/>
        <KeyWord name="showPad"/>
        <KeyWord name="showRadio"/>
        <KeyWord name="showSubtitles"/>
        <KeyWord name="showUavFeed"/>
        <KeyWord name="showWarrant"/>
        <KeyWord name="showWatch"/>
        <KeyWord name="showWaypoint"/>
        <KeyWord name="shownArtilleryComputer"/>
        <KeyWord name="shownChat"/>
        <KeyWord name="shownCompass"/>
        <KeyWord name="shownCuratorCompass"/>
        <KeyWord name="shownGPS"/>
        <KeyWord name="shownMap"/>
        <KeyWord name="shownPad"/>
        <KeyWord name="shownRadio"/>
        <KeyWord name="shownUavFeed"/>
        <KeyWord name="shownWarrant"/>
        <KeyWord name="shownWatch"/>
        <KeyWord name="side"/>
        <KeyWord name="sideChat"/>
        <KeyWord name="sideEnemy"/>
        <KeyWord name="sideFriendly"/>
        <KeyWord name="sideLogic"/>
        <KeyWord name="sideRadio"/>
        <KeyWord name="sideUnknown"/>
        <KeyWord name="simpleTasks"/>
        <KeyWord name="simulCloudDensity"/>
        <KeyWord name="simulCloudOcclusion"/>
        <KeyWord name="simulInClouds"/>
        <KeyWord name="simulWeatherSync"/>
        <KeyWord name="simulationEnabled"/>
        <KeyWord name="sin"/>
        <KeyWord name="size"/>
        <KeyWord name="sizeOf"/>
        <KeyWord name="skill"/>
        <KeyWord name="skillFinal"/>
        <KeyWord name="skipTime"/>
        <KeyWord name="sleep"/>
        <KeyWord name="sliderPosition"/>
        <KeyWord name="sliderRange"/>
        <KeyWord name="sliderSetPosition"/>
        <KeyWord name="sliderSetRange"/>
        <KeyWord name="sliderSetSpeed"/>
        <KeyWord name="sliderSpeed"/>
        <KeyWord name="slingLoadAssistantShown"/>
        <KeyWord name="soldierMagazines"/>
        <KeyWord name="someAmmo"/>
        <KeyWord name="soundVolume"/>
        <KeyWord name="spawn"/>
        <KeyWord name="speaker"/>
        <KeyWord name="speed"/>
        <KeyWord name="speedMode"/>
        <KeyWord name="sqrt"/>
        <KeyWord name="squadParams"/>
        <KeyWord name="stance"/>
        <KeyWord name="startLoadingScreen"/>
        <KeyWord name="step"/>
        <KeyWord name="stop"/>
        <KeyWord name="stopped"/>
        <KeyWord name="str"/>
        <KeyWord name="sunOrMoon"/>
        <KeyWord name="supportInfo"/>
        <KeyWord name="suppressFor"/>
        <KeyWord name="surfaceIsWater"/>
        <KeyWord name="surfaceNormal"/>
        <KeyWord name="surfaceType"/>
        <KeyWord name="swimInDepth"/>
        <KeyWord name="switch"/>
        <KeyWord name="switchAction"/>
        <KeyWord name="switchCamera"/>
        <KeyWord name="switchGesture"/>
        <KeyWord name="switchLight"/>
        <KeyWord name="switchMove"/>
        <KeyWord name="switchableUnits"/>
        <KeyWord name="synchronizeObjectsAdd"/>
        <KeyWord name="synchronizeObjectsRemove"/>
        <KeyWord name="synchronizeTrigger"/>
        <KeyWord name="synchronizeWaypoint"/>
        <KeyWord name="synchronizedObjects"/>
        <KeyWord name="synchronizedTriggers"/>
        <KeyWord name="synchronizedWaypoints"/>
        <KeyWord name="systemChat"/>
        <KeyWord name="systemOfUnits"/>
        <KeyWord name="tan"/>
        <KeyWord name="targetsAggregate"/>
        <KeyWord name="targetsQuery"/>
        <KeyWord name="taskChildren"/>
        <KeyWord name="taskCompleted"/>
        <KeyWord name="taskDescription"/>
        <KeyWord name="taskDestination"/>
        <KeyWord name="taskHint"/>
        <KeyWord name="taskNull"/>
        <KeyWord name="taskParent"/>
        <KeyWord name="taskResult"/>
        <KeyWord name="taskState"/>
        <KeyWord name="teamMember"/>
        <KeyWord name="teamMemberNull"/>
        <KeyWord name="teamName"/>
        <KeyWord name="teamSwitch"/>
        <KeyWord name="teamSwitchEnabled"/>
        <KeyWord name="teamType"/>
        <KeyWord name="teams"/>
        <KeyWord name="terminate"/>
        <KeyWord name="terrainIntersect"/>
        <KeyWord name="terrainIntersectASL"/>
        <KeyWord name="text"/>
        <KeyWord name="textLog"/>
        <KeyWord name="textLogFormat"/>
        <KeyWord name="tg"/>
        <KeyWord name="then"/>
        <KeyWord name="throw"/>
        <KeyWord name="time"/>
        <KeyWord name="timeMultiplier"/>
        <KeyWord name="titleCut"/>
        <KeyWord name="titleFadeOut"/>
        <KeyWord name="titleObj"/>
        <KeyWord name="titleRsc"/>
        <KeyWord name="titleText"/>
        <KeyWord name="to"/>
        <KeyWord name="toArray"/>
        <KeyWord name="toLower"/>
        <KeyWord name="toString"/>
        <KeyWord name="toUpper"/>
        <KeyWord name="triggerActivated"/>
        <KeyWord name="triggerActivation"/>
        <KeyWord name="triggerArea"/>
        <KeyWord name="triggerAttachObject"/>
        <KeyWord name="triggerAttachVehicle"/>
        <KeyWord name="triggerAttachedVehicle"/>
        <KeyWord name="triggerStatements"/>
        <KeyWord name="triggerText"/>
        <KeyWord name="triggerTimeout"/>
        <KeyWord name="triggerTimeoutCurrent"/>
        <KeyWord name="triggerType"/>
        <KeyWord name="try"/>
        <KeyWord name="turretLocal"/>
        <KeyWord name="turretOwner"/>
        <KeyWord name="turretUnit"/>
        <KeyWord name="tvAdd"/>
        <KeyWord name="tvClear"/>
        <KeyWord name="tvCollapse"/>
        <KeyWord name="tvCount"/>
        <KeyWord name="tvCurSel"/>
        <KeyWord name="tvData"/>
        <KeyWord name="tvDelete"/>
        <KeyWord name="tvExpand"/>
        <KeyWord name="tvPicture"/>
        <KeyWord name="tvSetCurSel"/>
        <KeyWord name="tvSetData"/>
        <KeyWord name="tvSetPicture"/>
        <KeyWord name="tvSetValue"/>
        <KeyWord name="tvSort"/>
        <KeyWord name="tvSortByValue"/>
        <KeyWord name="tvText"/>
        <KeyWord name="tvValue"/>
        <KeyWord name="type"/>
        <KeyWord name="typeName"/>
        <KeyWord name="typeOf"/>
        <KeyWord name="uavControl"/>
        <KeyWord name="uiNamespace"/>
        <KeyWord name="uiSleep"/>
        <KeyWord name="unassignCurator"/>
        <KeyWord name="unassignItem"/>
        <KeyWord name="unassignTeam"/>
        <KeyWord name="unassignVehicle"/>
        <KeyWord name="underwater"/>
        <KeyWord name="uniform"/>
        <KeyWord name="uniformContainer"/>
        <KeyWord name="uniformItems"/>
        <KeyWord name="uniformMagazines"/>
        <KeyWord name="unitAddons"/>
        <KeyWord name="unitBackpack"/>
        <KeyWord name="unitPos"/>
        <KeyWord name="unitReady"/>
        <KeyWord name="unitRecoilCoefficient"/>
        <KeyWord name="units"/>
        <KeyWord name="unitsBelowHeight"/>
        <KeyWord name="unlinkItem"/>
        <KeyWord name="unlockAchievement"/>
        <KeyWord name="unregisterTask"/>
        <KeyWord name="updateDrawIcon"/>
        <KeyWord name="updateMenuItem"/>
        <KeyWord name="updateObjectTree"/>
        <KeyWord name="useAudioTimeForMoves"/>
        <KeyWord name="vectorAdd"/>
        <KeyWord name="vectorCos"/>
        <KeyWord name="vectorCrossProduct"/>
        <KeyWord name="vectorDiff"/>
        <KeyWord name="vectorDir"/>
        <KeyWord name="vectorDirVisual"/>
        <KeyWord name="vectorDistance"/>
        <KeyWord name="vectorDistanceSqr"/>
        <KeyWord name="vectorDotProduct"/>
        <KeyWord name="vectorFromTo"/>
        <KeyWord name="vectorMagnitude"/>
        <KeyWord name="vectorMagnitudeSqr"/>
        <KeyWord name="vectorMultiply"/>
        <KeyWord name="vectorNormalized"/>
        <KeyWord name="vectorUp"/>
        <KeyWord name="vectorUpVisual"/>
        <KeyWord name="vehicle"/>
        <KeyWord name="vehicleChat"/>
        <KeyWord name="vehicleRadio"/>
        <KeyWord name="vehicleVarName"/>
        <KeyWord name="vehicles"/>
        <KeyWord name="velocity"/>
        <KeyWord name="velocityModelSpace"/>
        <KeyWord name="verifySignature"/>
        <KeyWord name="vest"/>
        <KeyWord name="vestContainer"/>
        <KeyWord name="vestItems"/>
        <KeyWord name="vestMagazines"/>
        <KeyWord name="viewDistance"/>
        <KeyWord name="visibleCompass"/>
        <KeyWord name="visibleGPS"/>
        <KeyWord name="visibleMap"/>
        <KeyWord name="visiblePosition"/>
        <KeyWord name="visiblePositionASL"/>
        <KeyWord name="visibleWatch"/>
        <KeyWord name="waitUntil"/>
        <KeyWord name="waves"/>
        <KeyWord name="waypoint"/>
        <KeyWord name="waypointAttachObject"/>
        <KeyWord name="waypointAttachVehicle"/>
        <KeyWord name="waypointAttachedObject"/>
        <KeyWord name="waypointAttachedVehicle"/>
        <KeyWord name="waypointBehaviour"/>
        <KeyWord name="waypointCombatMode"/>
        <KeyWord name="waypointCompletionRadius"/>
        <KeyWord name="waypointDescription"/>
        <KeyWord name="waypointFormation"/>
        <KeyWord name="waypointHousePosition"/>
        <KeyWord name="waypointLoiterRadius"/>
        <KeyWord name="waypointLoiterType"/>
        <KeyWord name="waypointName"/>
        <KeyWord name="waypointPosition"/>
        <KeyWord name="waypointScript"/>
        <KeyWord name="waypointShow"/>
        <KeyWord name="waypointSpeed"/>
        <KeyWord name="waypointStatements"/>
        <KeyWord name="waypointTimeout"/>
        <KeyWord name="waypointTimeoutCurrent"/>
        <KeyWord name="waypointType"/>
        <KeyWord name="waypointVisible"/>
        <KeyWord name="waypoints"/>
        <KeyWord name="weaponAccessories"/>
        <KeyWord name="weaponCargo"/>
        <KeyWord name="weaponDirection"/>
        <KeyWord name="weaponLowered"/>
        <KeyWord name="weaponState"/>
        <KeyWord name="weapons"/>
        <KeyWord name="weaponsItems"/>
        <KeyWord name="weaponsItemsCargo"/>
        <KeyWord name="weaponsTurret"/>
        <KeyWord name="weightRTD"/>
        <KeyWord name="west"/>
        <KeyWord name="while"/>
        <KeyWord name="wind"/>
        <KeyWord name="windDir"/>
        <KeyWord name="windStr"/>
        <KeyWord name="with"/>
        <KeyWord name="worldName"/>
        <KeyWord name="worldToModel"/>
        <KeyWord name="worldToModelVisual"/>
        <KeyWord name="worldToScreen"/>
        <KeyWord name="channelEnabled"/>
        <KeyWord name="controlsGroupCtrl"/>
        <KeyWord name="currentChannel"/>
        <KeyWord name="enableChannel"/>
        <KeyWord name="getChosenCont"/>
        <KeyWord name="getPlayerChannel"/>
        <KeyWord name="getSuppression"/>
        <KeyWord name="isTurnedOut "/>
        <KeyWord name="isWeaponDeployed"/>
        <KeyWord name="isWeaponDeployed"/>
        <KeyWord name="isWeaponRested"/>
        <KeyWord name="isWeaponRested "/>
        <KeyWord name="lbSetPictureColor"/>
        <KeyWord name="lbSetPictureColorDisabled"/>
        <KeyWord name="lbSetPictureColorSelected"/>
        <KeyWord name="leaderboardDeInit"/>
        <KeyWord name="leaderboardGetRows"/>
        <KeyWord name="leaderboardInit"/>
        <KeyWord name="setCurrentChannel"/>
        <KeyWord name="setSuppression"/>
        <KeyWord name="profileNameSteam"/>
        <KeyWord name="allPlayers"/>
        <KeyWord name="arrayIntersect"/>
        <KeyWord name="configHierarchy"/>
        <KeyWord name="currentNamespace"/>
        <KeyWord name="currentThrowable"/>
        <KeyWord name="getObjectViewDistance"/>
        <KeyWord name="isObjectHidden"/>
        <KeyWord name="param"/>
        <KeyWord name="params"/>
        <KeyWord name="remoteExec"/>
        <KeyWord name="remoteExecCall"/>
        <KeyWord name="roleDescription"/>
        <KeyWord name="serverName"/>
        <KeyWord name="setGroupIdGlobal"/>
        <KeyWord name="worldSize"/>
        <KeyWord name="AGLToASL"/>
        <KeyWord name="ASLToAGL"/>
        <KeyWord name="didJIP"/>
        <KeyWord name="didJIPOwner"/>
        <KeyWord name="distance2D"/>
        <KeyWord name="getAllHitPointsDamage"/>
        <KeyWord name="getHitIndex"/>
        <KeyWord name="getModelInfo"/>
        <KeyWord name="getObjectType"/>
        <KeyWord name="joinString"/>
        <KeyWord name="lineIntersectsSurfaces"/>
        <KeyWord name="objectParent"/>
        <KeyWord name="remoteExec"/>
        <KeyWord name="setHitIndex"/>
        <KeyWord name="splitString"/>
        <KeyWord name="targetKnowledge"/>
        <KeyWord name="ZEN_FMW_Array_RemoveIndexes" func="yes">
            <Overload retVal="" descr="Removes Indexed Elements from Array
Removes all elements indexed in (2) from (1) by reference.
Params: 1. Variable Array
        2. Variable Array, the indexes
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_CFG_VehicleWeapons" func="yes">
            <Overload retVal="" descr="Config Find Vehicle Weapons
Afterwards, _Zen_WeaponsArray contains all true weapons on (1).
Params: 1. String, a vehicle classname
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_Code_GiveLoadoutsOrdered" func="yes">
            <Overload retVal="" descr="Give Loadouts in Order
Gives each of (2) to (1) in order.  Cycles back through (2) if there are more units.
Params: 1. Array, Group, Object, Side, the units
        2. Variable Array, loadout strings
        3. Side or String, the side of equipment or 'custom' to use custom loadouts
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_Code_Insertion" func="yes">
            <Overload retVal="" descr="Generic Vehicle Spawn and Insertion
Spawns vehicle of type (2) at (3).  Puts (1) in the vehicle.  Orders an insertion at (4),
then returns the vehicle to (3).  Afterwards _Zen_Vehicle refers to the vehicle spawned.
Params: 1. Array, Group, Object, Side, the units
        2. String, the classname of the vehicle
        3. Array, Group, Object, String, the start point
        4. Array, Group, Object, String, the insertion point
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_Code_InsertionPatrol" func="yes">
            <Overload retVal="" descr="Generic Vehicle Spawn, Insertion, and Patrol
Spawns a vehicle of type (2) at (3) and puts (1) inside.  Orders an insertion within (4).
Orders (1) to patrol (4) once they get out.  Deletes the vehicle when it returns to (3).
Params: 1. Array, Group, Object, Side, the units
        2. String, the classname of the vehicle
        3. Array, Group, Object, String, the start point
        4. Array, Group, Object, String, an area marker
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_Code_SpawnMarker" func="yes">
            <Overload retVal="" descr="Spawn and Patrol Units in Marker
Spawns (2) groups with 4-6 units of side (3) in (1).  Orders groups to patrol in (1).
Afterwards _Zen_GrpsArray refers to the array of groups spawned.
Params: 1. String, marker
        2. Scalar, number of groups
        3. Side
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_Code_SpawnPoint" func="yes">
            <Overload retVal="" descr="Spawn and Patrol Units around Point
Spawns (3) groups with 4-6 units of side (4) within (2) meters of (1).  Orders groups to
patrol around (1).  Afterwards _Zen_GrpsArray refers to the array of groups spawned.
Params: 1. Array, Group, Object, Icon Marker, the center
        2. Scalar, distance
        3. Scalar, number of groups
        4. Side
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_Code_SpawnPointBehind" func="yes">
            <Overload retVal="" descr="Spawn Behind and Patrol Units around Point
Spawns (5) groups with 4-6 units of side (6) within (3) to (4) meters of (2) and behind
the line passing through (2) perpendicular to the line from (1) to (2).  Orders groups to
patrol around (2) from (3) to (4) meters.  Afterwards _Zen_GrpsArray refers to the array
of groups spawned.
Params: 1. Array, Group, Object, Icon Marker, the start
        2. Array, Group, Object, Icon Marker, the center
        3. Scalar, minimum distance from (2)
        4. Scalar, maximum distance from (2)
        5. Scalar, number of groups
        6. Side
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_Code_WaitDistanceGreater" func="yes">
            <Overload retVal="" descr="WaitUntil Distance Is Greater
Stops execution until the 2D distance between (1) and (2) is more than (3).
Params: 1. Array, Group, Object, String
        2. Array, Group, Object, String
        3. Scalar
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_Code_WaitDistanceLess" func="yes">
            <Overload retVal="" descr="WaitUntil Distance Is Less
Stops execution until the 2D distance between (1) and (2) is less than (3).
Params: 1. Array, Group, Object, String
        2. Array, Group, Object, String
        3. Scalar
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_Loadout_DefaultPreset" func="yes">
            <Overload retVal="" descr="Zen_GiveLoadout Preset Loadout Default List
Provides value for Zen_GiveLoadout argument 3 and Zen_GiveLoadoutBlufor et al.
argument 2 for the default preset selection used by Zen_GiveLoadoutBlufor.
Params: None
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_Loadout_StdInfantryPreset" func="yes">
            <Overload retVal="" descr="Zen_GiveLoadout Preset Loadout Standard Infantry List
Provides value for Zen_GiveLoadout argument 3 and Zen_GiveLoadoutBlufor et al.
argument 2 for standard infantry squad loadouts preset selection.
Params: None
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_MP_REAll" func="yes">
            <Overload retVal="" descr="MP Remote Execution on All Machines
Sends closure request for (1) with arguments (2) to all machines.  Runs the function
locally using (3).
Params: 1. String, the name of a function
        2. Any, the arguments to the function
        3. SQF command, local execution type, spawn or call
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_MP_REClient" func="yes">
            <Overload retVal="" descr="MP Remote Execution on a Client
Sends closure request for (1) with arguments (2) to the owner of (3).  Runs the function
locally if the the object is local using (4).
Params: 1. String, the name of a function
        2. Any, the arguments to the function
        3. SQF command, local execution type, spawn or call
        4. Object, an object local to the client
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_MP_RENonDedicated" func="yes">
            <Overload retVal="" descr="MP Remote Execution on All but Dedicated Server
Sends closure request for (1) with arguments (2) to all machines.  Does not run the
function locally on a dedicated server using (3).
Params: 1. String, the name of a function
        2. Any, the arguments to the function
        3. SQF command, local execution type, spawn or call
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_MP_REServerOnly" func="yes">
            <Overload retVal="" descr="MP Remote Execution on the Server
Sends closure request for (1) with arguments (2) to the server.  Runs the function locally
if on the server using (3).
Params: 1. String, the name of a function
        2. Any, the arguments to the function
        3. SQF command, local execution type, spawn or call
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_Math_DistGreater2D" func="yes">
            <Overload retVal="" descr="Distance Greater than 2D
Determines if the 2D distance between (1) and (2) is greater than (3).
Params: 1. Array, Group, Object, String, the first position
        2. Array, Group, Object, String, the second position
        3. Scalar, the distance
Return: Boolean">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_Math_DistGreater3D" func="yes">
            <Overload retVal="" descr="Distance Greater than 3D
Determines if the 3D distance between (1) and (2) is greater than (3).
Params: 1. Array, Group, Object, String, the first position
        2. Array, Group, Object, String, the second position
        3. Scalar, the distance
Return: Boolean">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_Math_DistLess2D" func="yes">
            <Overload retVal="" descr="Distance Less than 2D
Determines if the 2D distance between (1) and (2) is less than (3).
Params: 1. Array, Group, Object, String, the first position
        2. Array, Group, Object, String, the second position
        3. Scalar, the distance
Return: Boolean">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_Math_DistLess3D" func="yes">
            <Overload retVal="" descr="Distance Less than 3D
Determines if the 3D distance between (1) and (2) is less than (3).
Params: 1. Array, Group, Object, String, the first position
        2. Array, Group, Object, String, the second position
        3. Scalar, the distance
Return: Boolean">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_Math_RandomPoint" func="yes">
            <Overload retVal="" descr="Random Position within Radius from Center
Returns a 2D position between 0 and (2) meters at any direction from (1).
Params: 1. Array, Group, Object, String, the center
        2. Scalar, the maximum distance
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_Math_RandomPointMin" func="yes">
            <Overload retVal="" descr="Random Position within Radius from Center with Minimum
Returns 2D position between (2) and (3) meters at any direction from (1).
Params: 1. Array, Group, Object, String, the center
        2. Scalar, the minimum distance
        3. Scalar, the maximum distance
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_Math_TerrainGradientCart" func="yes">
            <Overload retVal="" descr="Terrain Gradient Cartesian Vector
Assigns the 2D Cartesian gradient at (1) to (2).
Params: 1. Array, Group, Object, String, a position
        2. Variable Any
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_Math_TerrainParallelCart" func="yes">
            <Overload retVal="" descr="Terrain Parallel Cartesian Unit Vector
Assigns the vector parallel to the terrain and in direction of greatest height increase
with magnitude 1 at (1) to (2).
Params: 1. Array, Group, Object, String, a position
        2. Variable Any
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_Code_ErrorExitVoid" func="yes">
            <Overload retVal="" descr="Print Error and Exit with Void
Prints a standard framework error from (1) with text (2).  Removes (1) from the stack.
Params: 1. String, the function
        2. String, the description
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_Code_ErrorExitValue" func="yes">
            <Overload retVal="" descr="Print Error and Exit with Any
Prints a standard framework error from (1) with text (2).  Removes (1) from the stack and
returns (3).
Params: 1. String, the function
        2. String, the description
        3. Any
Return: Any">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_Code_Error" func="yes">
            <Overload retVal="" descr="Print Error and Stack Trace
Prints a standard framework error from (1) with (2) text.
Params: 1. String, the function
        2. String, the description
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_OBJ_DeleteDead" func="yes">
            <Overload retVal="" descr="Delete Dead Objects
Deletes all dead soldiers and vehicles that are further than (1) meters from any player.
Params: 1. Scalar, the minimum distance to delete at
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_ZAF_NotString" func="yes">
            <Overload retVal="" descr="Zen_ArrayFilterCondition Filter Not String
Provides value for Zen_ArrayFilterCondition's argument (2) to filter from an array all
string elements that do not contain (1).  Leaves elements of other types.
Params: 1. String
Return: Code">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_ZAF_String" func="yes">
            <Overload retVal="" descr="Zen_ArrayFilterCondition Filter String
Provides value for Zen_ArrayFilterCondition's argument (2) to filter from an array all
string elements that contain (1).  Leaves elements of other types.
Params: 1. String
Return: Code">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_ZAF_Type" func="yes">
            <Overload retVal="" descr="Zen_ArrayFilterCondition Filter Type
Provides value for Zen_ArrayFilterCondition's argument (2) to filter from an array all
elements of type (1).
Params: 1. String, the data type
Return: Code">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_ZAS_ArrayLength" func="yes">
            <Overload retVal="" descr="Zen_ArraySort Array Length Sort
Provides value for Zen_ArraySort's argument (2) to sort an array of arrays by length.
Params: None
Return: Code">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_ZAS_AlphaNumeric" func="yes">
            <Overload retVal="" descr="Zen_ArraySort AlphaNumeric String Sort
Provides value for Zen_ArraySort's argument (2) to sort an array of strings by their
characters' ASCII/Unicode values.
Params: None
Return: Code">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_ZAS_DistFarNear" func="yes">
            <Overload retVal="" descr="Zen_ArraySort Distance from Center Far to Near Sort
Provides value for Zen_ArraySort's argument (2) to sort an array of positions or objects
by their distance to (1) in descending order.
Params: 1. Array, Object, the center
Return: Code">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_ZAS_DistNearFar" func="yes">
            <Overload retVal="" descr="Zen_ArraySort Distance from Center Near to Far Sort
Provides value for Zen_ArraySort's argument (2) to sort an array of positions or objects
by their distance to (1) in ascending order.
Params: 1. Array, Object, the center
Return: Code">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_ZAS_IntInArray" func="yes">
            <Overload retVal="" descr="Zen_ArraySort Integer Index in Array Sort
Provides value for Zen_ArraySort's argument (2) to sort an array of arrays containing a
scalar at (1).
Params: 1. Scalar, the index
Return: Code">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_ZAS_StringLength" func="yes">
            <Overload retVal="" descr="Zen_ArraySort String Length Sort
Provides value for Zen_ArraySort's argument (2) to sort an array of strings by length.
Params: None
Return: Code">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_ZFGP_Beach" func="yes">
            <Overload retVal="" descr="Zen_FindGroundPosition Beach Position
Provides value for Zen_FindGroundPosition's arguments (4,12).
Params: None
Return: Any">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_ZFGP_DeepSea" func="yes">
            <Overload retVal="" descr="Zen_FindGroundPosition Deep Sea Position
Provides value for Zen_FindGroundPosition's arguments (4,12).
Params: None
Return: Any">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_ZFGP_Flat" func="yes">
            <Overload retVal="" descr="Zen_FindGroundPosition Flat Position
Provides value for Zen_FindGroundPosition's arguments (4,12).
Params: None
Return: Any">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_ZFGP_Forest" func="yes">
            <Overload retVal="" descr="Zen_FindGroundPosition Forest Position
Provides value for Zen_FindGroundPosition's arguments (4,12).
Params: None
Return: Any">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_ZFGP_Hill" func="yes">
            <Overload retVal="" descr="Zen_FindGroundPosition Hill Position
Provides value for Zen_FindGroundPosition's arguments (4,12).
Params: None
Return: Any">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_ZFGP_LandingZone" func="yes">
            <Overload retVal="" descr="Zen_FindGroundPosition Landing Zone Position
Provides value for Zen_FindGroundPosition's arguments (4,12).
Params: None
Return: Any">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_ZFGP_NotForest" func="yes">
            <Overload retVal="" descr="Zen_FindGroundPosition Non-Forest Position
Provides value for Zen_FindGroundPosition's arguments (4,12).
Params: None
Return: Any">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_FMW_ZFGP_Urban" func="yes">
            <Overload retVal="" descr="Zen_FindGroundPosition Urban Position
Provides value for Zen_FindGroundPosition's arguments (4,12).
Params: None
Return: Any">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_Array_LastElement" func="yes">
            <Overload retVal="" descr="Array Last Element
Gets the last element in (1).
Params: 1. Array
Return: Any">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_Array_RandElement" func="yes">
            <Overload retVal="" descr="Array Random Element
Gets a random element in (1).
Params: 1. Array
Return: Any">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_Array_RandIndex" func="yes">
            <Overload retVal="" descr="Array Random Index
Gets a random integer within the size of (1).
Params: 1. Array
Return: Scalar">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_Array_UnorderedRemove" func="yes">
            <Overload retVal="" descr="Array Unordered Remove
Removes the element at (2) from (1).  The order of elements in (1) will change.
Params: 1. Array
        2. Scalar, the index
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_Code_WaitScript" func="yes">
            <Overload retVal="" descr="WaitUntil Script Done
Stops execution until (1) has stopped executing.
Params: 1. Variable Script Handle
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_Code_SleepFrames" func="yes">
            <Overload retVal="" descr="Sleep for Frames
Stops execution until (1) frames have elapsed.
Unreliable for long periods of time when framerate changes.
Params: 1. Scalar
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_Code_SwapVars" func="yes">
            <Overload retVal="" descr="Swap Variables
Swaps the values of (1) and (2).
Params: 1. Variable Any
        2. Variable Any
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_Math_MarkerArea" func="yes">
            <Overload retVal="" descr="Marker Area
Finds the area of (1) in m^2.
Params: 1. String, area marker
Return: Scalar">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_Math_RandNegativePositive" func="yes">
            <Overload retVal="" descr="Random Negative or Positive Integer
Returns 1 or -1 with balanced pseudorandomness.
Params: None
Return: Scalar">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_Math_VectCartCyl" func="yes">
            <Overload retVal="" descr="Vector Convert Cartesian to Cylindrical
Returns the 3d vector array of (1) in cylindrical coordinates.
Params: 1. Variable Array
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_Math_VectCartPolar" func="yes">
            <Overload retVal="" descr="Vector Convert Cartesian to Polar
Returns the 3d vector array of (1) in polar coordinates.
Params: 1. Variable Array
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_Math_VectCylCart" func="yes">
            <Overload retVal="" descr="Vector Convert Cylindrical to Cartesian
Returns the 3D cylindrical vector array in Cartesian coordinates.
Params: 1. Variable Array
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_Math_VectCylPolar" func="yes">
            <Overload retVal="" descr="Vector Convert Cylindrical to Polar
Returns the 3D cylindrical vector array in polar coordinates.
Params: 1. Variable Array
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_Math_VectPolarCart" func="yes">
            <Overload retVal="" descr="Vector Convert Polar to Cartesian
Returns the 3D polar vector array in Cartesian coordinates.
Params: 1. Variable Array
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_Math_VectPolarCyl" func="yes">
            <Overload retVal="" descr="Vector Convert Polar to Cylindrical
Returns the 3D polar vector array in cylindrical coordinates.
Params: 1. Variable Array
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_Math_VectRotateX" func="yes">
            <Overload retVal="" descr="Vector Rotate X
Transforms the 3D Cartesian vector (1) by (2) degrees counter-clockwise orthogonal to the
X axis; (in the ZY plane), (X is east).
Params: 1. Variable Array
        2. Scalar, rotation degrees
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_Math_VectRotateY" func="yes">
            <Overload retVal="" descr="Vector Rotate Y
Transforms the 3D Cartesian vector (1) by (2) degrees counter-clockwise orthogonal to the
Y axis; (in the XZ plane), (Y is north).
Params: 1. Variable Array
        2. Scalar, rotation degrees
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_Math_VectRotateZ" func="yes">
            <Overload retVal="" descr="Vector Rotate Z
Transforms the 3D Cartesian vector (1) by (2) degrees counter-clockwise orthogonal to the
Z axis; (in the XY plane), (Z is upward).
Params: 1. Variable Array
        2. Scalar, rotation degrees
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_Math_VectTransform" func="yes">
            <Overload retVal="" descr="Transform Vector
Returns (1) with its values shifted by (2,4).  Does not modify (1).
Params: 1. Variable Array
        2. Scalar, the X transformation
        3. Scalar, the Y transformation
        4. Scalar, the Z transformation
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_OBJ_AnimateDoors" func="yes">
            <Overload retVal="" descr="Animate Vehicle Doors
Fully opens or closes all door animation sources on (1).
Params: 1. Object, vehicle
        2. Scalar, 1 to open, 0 to close
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_OBJ_ASLPositionZ" func="yes">
            <Overload retVal="" descr="Position Z coordinate above Sea level
Gets the height of (1) ASL.
Params: 1. Object
Return: Scalar">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_OBJ_ATLPositionZ" func="yes">
            <Overload retVal="" descr="Position Z coordinate above Terrain
Gets the height of (1) ATL.
Params: 1. Object
Return: Scalar">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_OBJ_BBX" func="yes">
            <Overload retVal="" descr="Bounding Box X Size
Returns the absolute value of the total X size of (1)'s 3D model.
Params: 1. Object
Return: Scalar">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_OBJ_BBY" func="yes">
            <Overload retVal="" descr="Bounding Box Y Size
Returns the absolute value of the total Y size of (1)'s 3D model.
Params: 1. Object
Return: Scalar">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_OBJ_BBZ" func="yes">
            <Overload retVal="" descr="Bounding Box Z Size
Returns the absolute value of the total Z size of (1)'s 3D model.
Params: 1. Object
Return: Scalar">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_OBJ_CountBuildingPos" func="yes">
            <Overload retVal="" descr="Count Building Positions
Assigns the number of building positions in (2) to (1).
Params: 1. Variable Any
        2. Object, building
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_OBJ_CountCargoSeats" func="yes">
            <Overload retVal="" descr="Count Vehicle Passenger Seats
Finds how many total cargo seats (1) has.  Does not include FFV positions.
Params: 1. Object, vehicle
Return: Scalar">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_OBJ_DeleteVehCrew" func="yes">
            <Overload retVal="" descr="Delete Vehicle and Crew
Deletes (1) and its crew.
Params: 1. Object, vehicle
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_OBJ_MakePOW" func="yes">
            <Overload retVal="" descr="Make Unit POW
Sets (1) captive, disables movement, forces standing, and removes all weapons.
Params: 1. Object
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_OBJ_OrderGetOut" func="yes">
            <Overload retVal="" descr="Order Units Get Out
Forces all (1) to exit (2) immediately.
Params: 1. Variable Array, the units
        2. Object, the vehicle
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_OBJ_OrderGetIn" func="yes">
            <Overload retVal="" descr="Order Units Get In
Orders all (1) to enter (2) as passengers immediately.
Params: 1. Variable Array, the units
        2. Object, the vehicle
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_OBJ_OrientAircraft" func="yes">
            <Overload retVal="" descr="Set Aircraft Direction and Velocity
Faces (1) towards (2) and gives velocity of magnitude (3) towards (2).
Params: 1. Object
        2. Variable Array, the position
        3. Scalar, the speed
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_OBJ_ParachuteInsertion" func="yes">
            <Overload retVal="" descr="Simple Parachute Insertion
Teleports all (1) (3) meters into the air at (2) and provides parachutes.
Params: 1. Variable Array, the units
        2. Variable Array, the position
        3. Scalar, the height
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_OBJ_TransformATL" func="yes">
            <Overload retVal="" descr="Transform Object Position ATL
Moves (1) to a new position ATL shifted by (2,4).
Params: 1. Object
        2. Scalar, the X transformation
        3. Scalar, the Y transformation
        4. Scalar, the Z transformation
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_Parse_GetArgument" func="yes">
            <Overload retVal="" descr="Parse Get Optional Argument
Assigns the value of the argument at (2) to (1) if it exists.
Params: 1. Variable Any
        2. Scalar, argument index
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_Parse_GetArgumentDefault" func="yes">
            <Overload retVal="" descr="Parse Get Optional Argument with Default
Assigns the value of the argument at (2) to (1) if it exists.  Otherwise assigns (3) to (1).
Params: 1. Variable Any
        2. Scalar, argument index
        3. Any, literal, expression, variable
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_Parse_GetSetArgumentDefault" func="yes">
            <Overload retVal="" descr="Parse Get Optional Argument with Default and Set Argument
Assigns the value of the argument at (2) to (1) if it exists, always sets '_this' at (2)
to (4).  Otherwise assigns (3) to (1).
Params: 1. Variable Any
        2. Scalar, argument index
        3. Any, the default value
        4. Any, the new argument value
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_Parse_GetSetArgumentOptional" func="yes">
            <Overload retVal="" descr="Parse Get Optional Argument with Default or Set Argument
Assigns the value of the argument at (2) to (1) if it exists.  Otherwise assigns (3) to (1)
and sets '_this' at (2) to (4).  Does not set (4) at (2) in '_this' if an element exists at (2).
Params: 1. Variable Any
        2. Scalar, argument index
        3. Any, the default value
        4. Any, the new argument value
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_Parse_ToArray" func="yes">
            <Overload retVal="" descr="Parse Value To Array
Converts (1) to an array if it is not one.
Params: 1. Variable Any
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_Parse_ToString" func="yes">
            <Overload retVal="" descr="Parse Value To String
Converts (1) to a string if it is not one.
Params: 1. Variable Any
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="ZEN_STD_Parse_ToStringLower" func="yes">
            <Overload retVal="" descr="Parse Value To Lowercase String
Converts (1) to a string in lowercase if it is not one.
Params: 1. Variable Any
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_AddEject" func="yes">
            <Overload retVal="" descr="Adds an action to (1) that allows crew to eject at any time from the vehicle.
Does not affect passengers, as they already have an eject action in aircraft.
Usage : Call
Params: 1. Array of objects, or object, the vehicles to add the action to
 (opt.) 2. Boolean, true to remote execute the function, (default: true)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_AddFastRope" func="yes">
            <Overload retVal="" descr="Adds an action to (1) allowing passengers to fastrope from those vehicle(s), provided it is
going slow enough.  AI group members will follow a player when he fastropes.  Other players
in the helicopter must elect to follow by using the action.  To force all units to fastrope,
use Zen_OrderFastRope.
Usage : Call
Params: 1. Array of objects, or object, the vehicles to add the action to
 (opt.) 2. Boolean, true to remote execute the function, (default: true)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_AddFireSupportAction" func="yes">
            <Overload retVal="" descr="Creates a action menu entry to use the given fire support template.  It follows the template
exactly.  For guided rounds, if (6) is 'designator', (5) must have a laser designator, or
guidance will not work.  Counts uses by support template; a use by one client counts for all.
When uses reaches (4), the action associated with this support is removed from all (1) on all clients.
For (5), 'player' automatically sets the designating unit to the object that called the action.
Usage : Call
Params: 1. Array, object, group, side, who to get the support option
        2. String, the fire support template name
        3. String, a name for this support to show in the menu
        4. Scalar, the maximum number of usages, -1 for infinite
    AND IF the template has 'true' for guided
        5. Object or string, the target, the designating unit, or 'player'
 (opt.) 6. String, what the object is, 'target' 'designator', (default: 'designator')
Return: String, the fire support action name">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_AddGiveMagazine" func="yes">
            <Overload retVal="" descr="Allows every unit in (1) to give a magazine matching a teammate's current weapon
to them.  The action only appears when the giver gets within 2 meters of the receiver.
Usage : Call
Params: 1. Array, group, object, or side, units to add the action to
 (opt.) 2. Boolean, true to remote execute the function, (default: true)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_AddLoadoutDialog" func="yes">
            <Overload retVal="" descr="Attaches an action to (1) that allows a player to open a dialog menu and select from (2)
loadouts.  Works with all preset and custom loadouts.
Usage : Call
Params: 1. Array or object, the object(s) to add the action to
        2. Array of strings, the loadouts to list in order
 (opt.) 3. Scalar, number of uses, -1 for infinite, (default: -1)
 (opt.) 4. Boolean, true to remote execute the function, (default: true)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_AddRepackMagazines" func="yes">
            <Overload retVal="" descr="Adds an action to every unit in (1), allowing the unit to repack remaining rounds into
the fewest magazines possible.  Does not repack identical rounds from different capacity
magazines into the same capacity magazine.
Usage : Call
Params: 1. Array, group, object, or side, units to add the action to
 (opt.) 2. Boolean, true to remote execute the function, (default: true)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_AreInArea" func="yes">
            <Overload retVal="" descr="Determines whether all (1) are inside (2) or the logical polygon.
Usage : Call
Params: 1. Array, group, object, side, objects to test
    AND
        2. String, a marker
 (opt.) 3. Array, markers units cannot be in, (default: [])
    OR
        2. Array, group, object, string, the center of the polygon
        3. Array, the dimensions of the polygon
            1. Scalar, the horizontal radius
            2. Scalar, the vertical radius
        4. Scalar, the angle of the polygon as rotated from 0 degrees
        5. String, the shape of the polygon, only 'ellipse' or 'rectangle'
 (opt.) 6. Array, markers units cannot be in, (default: [])
Return: Boolean, true if all are inside">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_AreIndoors" func="yes">
            <Overload retVal="" descr="Determines if all (1) are in a building.
Usage : Call
Params: 1. Array, group, object, side, units
Return: Boolean, false if at least one unit is not in a building">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_AreInVehicle" func="yes">
            <Overload retVal="" descr="Returns true if all (1) are in (2) and false if one or more are not.  Can test for being
in a specific vehicle or any vehicle.  Does not consider dead units.
Usage : Call
Params: 1. Array, group, object, side, units
 (opt.) 2. Object, a vehicle, (default: Any vehicle)
Return: Boolean">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_AreLocal" func="yes">
            <Overload retVal="" descr="Determines if all (1) are local to the machine that executes this function.
False if one is not local and true only if all are.
Usage : Call
Params: 1. Array, group, object, side, objects
Return: Boolean">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_AreNotInArea" func="yes">
            <Overload retVal="" descr="Determines whether none of (1) is inside (2) or the logical polygon.
Usage : Call
Params: 1. Array, group, object, side, objects to test
    AND
        2. String, a marker
 (opt.) 3. Array, markers units cannot be in, (default: [])
    OR
        2. Array, group, object, string, the center of the polygon
        3. Array, the dimensions of the polygon
            1. Scalar, the horizontal radius
            2. Scalar, the vertical radius
        4. Scalar, the angle of the polygon as rotated from 0 degrees
        5. String, the shape of the polygon, only 'ellipse' or 'rectangle'
 (opt.) 6. Array, markers units cannot be in, (default: [])
Return: Boolean, true if none is in the given area">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_AreNotIndoors" func="yes">
            <Overload retVal="" descr="Determines whether none of (1) is inside of a building.
Usage : Call
Params: 1. Array, group, object, side, units
Return: Boolean, true if none is indoors">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_AreNotInVehicle" func="yes">
            <Overload retVal="" descr="Returns true if all (1) are not in (2) and false if one or more are.  Can test for being
in a specific vehicle or any vehicle.  Does not consider dead units.
Usage : Call
Params: 1. Array, group, object, side, units
 (opt.) 2. Object, a vehicle, (default: Any vehicle)
Return: Boolean">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_AreNotLocal" func="yes">
            <Overload retVal="" descr="Determines if all (1) are local to the machine that executes this function.
False if one is local and true only if none is.
Usage : Call
Params: 1. Array, group, object, side, units
Return: Boolean">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_AreTasksComplete" func="yes">
            <Overload retVal="" descr="Determines if all (1)'s states match one of (2).
Usage : Call
Params: 1. Array or string, the unique name(s) of the tasks to check
 (opt.) 2. Array or string, the state(s) that are considered complete, (default: ['failed', 'succeeded', 'canceled'])
Return: Boolean, true if the states match">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_AreUnitsTasksComplete" func="yes">
            <Overload retVal="" descr="Evaluates if tasks associated with all (1) are completed.  If you enter a 0 for (2), all
tasks will be considered, except for those in (3).  Task is considered completed if its
state is 'failed', 'succeeded', or 'canceled'.
Usage : Call
Params: 1. Array, group, object, side, unit(s) whose tasks to check
 (opt.) 2. Array of strings or string, the unique name(s) of any task(s) to include, (default: all)
 (opt.) 3. Array of strings or string, the unique name(s) of any task(s) to exclude, (default: [])
Return: Boolean">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ArrayAppend" func="yes">
            <Overload retVal="" descr="Appends all of (2, N) to (1) by reference.  Does not unpack nested arrays.
Nested arrays are appended intact.
Usage : Call
Params: 1. Array, to append to
        2. Any, value(s) to append
 (opt.) N. ...
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ArrayAppendNested" func="yes">
            <Overload retVal="" descr="Appends all of (2, N) to (1) by reference.  Unpacks nested arrays to one level, such
that nested elements are appended to the array directly.  Lower nested arrays are
appended intact.
Usage : Call
Params: 1. Array, to append to
        2. Any, value(s) to append
 (opt.) N. ...
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ArrayCopy" func="yes">
            <Overload retVal="" descr="Overwrites all data of (1) with that of (2) by reference, such that (1) now refers to
an exact copy of (2).  Trims to size.
Usage : Call
Params: 1. Array, to overwrite
        2. Array, the data
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ArrayFilterCondition" func="yes">
            <Overload retVal="" descr="Removes all elements from (1) that evaluate to true in (2).  You can use a function in or
as the condition.
Usage : Call
Params: 1. Array, to filter
        2. Code, the condition, use _this as the element (example: {isPlayer _this})
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ArrayFilterValues" func="yes">
            <Overload retVal="" descr="Removes any element of (1) that matches any of (2).
Usage : Call
Params: 1. Array, the array to filter
        2. Array, containing any values
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ArrayFindAverage" func="yes">
            <Overload retVal="" descr="Averages all the of the numbers in (1).  Returns 0 if there are no numbers.
Ignores all other data types.
Usage : Call
Params: 1. Array, with some numbers in it
Return: Scalar">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ArrayFindExtremum" func="yes">
            <Overload retVal="" descr="Returns the element in (1) that maximizes (2).  Only elements for which (2) returns
a number will be considered.  If no elements hash to a number, returns 0.
Use -1 * the result of the hashing function to find the minimum.
If multiple elements hash to the greatest value, the first will be returned.
Usage : Call
Params: 1. Array
        2. Code, a hashing function, use '_this' as the element, ex: {_this}, see Zen_ArraySort
Return: Any">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ArrayFindSum" func="yes">
            <Overload retVal="" descr="Returns the sum of all numbers in (1).  Not all elements must be numbers.
Usage : Call
Params: 1. Array
Return: Scalar">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ArrayGetDelimitedSlice" func="yes">
            <Overload retVal="" descr="Uses the value of (2) and (3) to get all elements of (1) that are between those values.
Gets only the first appearance of each delimiter (or second if they are the same) and
matches nested arrays.  Returns an empty array if (2) is not found.  Returns all of (1)
past (2) if (3) is not found.
Usage : Call
Params: 1. Array, the array to search in
        2. Any, the first value
        3. Any, the second value
Return: Array, not including the delimiting values">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ArrayGetIndexedSlice" func="yes">
            <Overload retVal="" descr="Gets all elements in (1) at and between indexes (2) and (3).  If (3) is greater than the
size of (1), sets (3) to that maximum.
Usage : Call
Params: 1. Array, the array to search in
        2. Scalar, the first index
 (opt.) 3. Scalar, the second index, (default: last element)
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ArrayGetNestedIndex" func="yes">
            <Overload retVal="" descr="Gets the indexes of the all nested arrays in (1) that contains (2) at index (3).  Also matches
nested nested arrays.  Use -1 as an index wildcard, and the function will search every
value of the nested array.
Usage : Call
Params: 1: Array, the array to search for nested arrays in
        2: Any, value to search for
        3: Scalar, the element of the nested array that the value matches
Return: Array, [] if there is no match">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ArrayGetNestedValue" func="yes">
            <Overload retVal="" descr="Gets a reference to the first nested array that contains (2) at index (3).  Also
matches nested nested arrays.  Use -1 as an index wildcard, and the function will
search every value of the nested array.
Usage : Call
Params: 1: Array, the array to search for nested arrays in
        2: Any, value to search for
        3: Scalar, the element of the nested array that the value matches
Return: Array, [] if there is no match">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ArrayGetRandom" func="yes">
            <Overload retVal="" descr="Randomly returns a single element from (1).  Returns (1) itself if it is not an array.
Usage : Call
Params: 1. Array
 (opt.) 2. Boolean, true to remove the element from the array, (default: false)
Return: Any">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ArrayGetRandomSequence" func="yes">
            <Overload retVal="" descr="Randomly returns (2) elements of (1).  If (3), removes those elements from (1).
Usage : Call
Params: 1. Array
        2. Scalar, how many elements to return
 (opt.) 3. Boolean, true to remove elements from (1), (default: false)
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ArrayGetType" func="yes">
            <Overload retVal="" descr="Returns all elements from (1) that are of type (2).  Searches nested arrays recursively,
unless (2) is 'ARRAY'.
Usage : Call
Params: 1. Array
        2. String or any, the typeName as a string or a literal of the type
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ArrayInsert" func="yes">
            <Overload retVal="" descr="Inserts (3) at index (2) in (1) by reference.  Does not unpack nested arrays.
Usage : Call
Params: 1. Array, to insert into
        2. Scalar, the index to insert at
        3. Any, the value to insert
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ArrayInsertSlice" func="yes">
            <Overload retVal="" descr="Inserts each of (3) starting at index (2) in (1).  Unpacks (3) to one level,
so each element of (3) is directly inserted in (1).  Leaves nested nested arrays intact.
Converts (3) to an array if it is not one.
Usage : Call
Params: 1. Array, to insert into
        2. Scalar, the index to insert at
        3. Any, the value to insert
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ArrayRemoveDead" func="yes">
            <Overload retVal="" descr="Removes null/dead objects, null groups, groups with no units, empty arrays, and arrays and
arrays containing entirely the all those from (1).  Leaves all other elements in (1).
The order of elements does not change.
Usage : Call
Params: 1. Array
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ArrayRemoveDuplicates" func="yes">
            <Overload retVal="" descr="Removes all duplicate elements (including nested arrays) from (1) that are, such that all
elements are unique.
Usage : Call
Params: 1. Array
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ArrayRemoveIndex" func="yes">
            <Overload retVal="" descr="Removes the element at (2) from (1) by reference.
Usage : Call
Params: 1: Array
        2: Scalar, the index
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ArrayRemoveIndexedSlice" func="yes">
            <Overload retVal="" descr="Removes all elements at and between (2) and (3) from (1).
Usage : Call
Params: 1: Array
        2: Scalar, the first index
        3: Scalar, the last index
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ArrayRemoveNonLocal" func="yes">
            <Overload retVal="" descr="Removes anything that is not a local object from (1) and all nested arrays in (1).
The order of elements does not change.
Usage : Call
Params: 1: Array, group, object, or side
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ArrayRemoveValue" func="yes">
            <Overload retVal="" descr="Removes all occurrences of (2) from (1) by reference.
Usage : Call
Params: 1: Array
        2: Any, the value
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ArrayRemoveValuedSlice" func="yes">
            <Overload retVal="" descr="Removes the first complete appearance of (2) in (1) contiguously.
Usage : Call
Params: 1. Array, to search in
        2. Array, to remove
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ArrayReplaceSlice" func="yes">
            <Overload retVal="" descr="Replaces all elements in (1) between and including (2,3) with all of (4).
Usage : Call
Params: 1. Array, to replace values in
        2. Scalar, the start index
        3. Scalar, the end index
        4. Array, the array to replace with
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ArrayReplaceValue" func="yes">
            <Overload retVal="" descr="Replaces all occurrences of (2) with (3) in (1).  Matches nested arrays.
Usage : Call
Params: 1. Array, to replace values in
        2. Any, the value to search for
        3. Any, the value to replace with
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ArrayReplaceValueNested" func="yes">
            <Overload retVal="" descr="Replaces all occurrences of (2) with (3) in (1).  Searches nested arrays.
Replaces nested nested arrays.
Usage : Call
Params: 1. Array, to replace values in
        2. Any, the value to search for
        3. Any, the value to replace with
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ArrayReverse" func="yes">
            <Overload retVal="" descr="Reverses all elements of (1).
Usage : Call
Params: 1: Array
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ArraySearch" func="yes">
            <Overload retVal="" descr="Returns the index of all nested arrays of (1) whose elements at all (2) hash (4) to
within, inclusive, the range (3).  (2,4) are aligned with each other, so the element at
(2.n) is hashed with (4.n) and checked within (3.n).
Usage : Call
Params: 1. Array of arrays
        2. Array of scalars, indexes of nested arrays to search
        3. Array, ranges the element must fall within
            Array:
                1. Scalar, lower bound
                2. Scalar, upper bound
        4. Array, scalar hash functions as code or global function string
Return: Array, [] if there is no match">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ArrayShuffle" func="yes">
            <Overload retVal="" descr="Reorders the elements of (1) by reference into a random permutation.
Usage : Call
Params: 1. Array
Return: Array, reference to (1)">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ArraySort" func="yes">
            <Overload retVal="" descr="Reorders the elements of (1) by the relative value when (3) == 'compare' or by the scalar
value when (3) == 'hash' returned by (2).  If (1) contains multiple types, you must account
for this in (2). (2) can be of any length or complexity, and it can be the name of a defined
function. Performance will vary based upon data and comparator complexity.  The order of
comparator equivalent elements does not change.  See Zen_FrameworkLibrary.sqf for
'compare' examples for (2).
Usage : Call
Params: 1. Array, to sort
 (opt.) 2. Code, the comparator, (default: Numbers ascending)
 (opt.) 3. String, 'compare' or 'hash', the type of comparator given, (default: 'compare')
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ArraySwapValues" func="yes">
            <Overload retVal="" descr="Swaps the data of elements (2) and (3) in (1) by reference.
Usage : Call
Params: 1. Array
        2. Scalar, the first index
        3. Scalar, the second index
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_CheckArguments" func="yes">
            <Overload retVal="" descr="Determines if all (1) are not nil and null, are of sufficient number, and are the correct
type.  Checks nested arrays' types with (3).  Use Zen_Debug_Arguments to enable and disable
this function globally.  The types are: ARRAY, BOOL, CODE, CONTROL, DISPLAY, GROUP, LOCATION,
OBJECT, SCALAR, SCRIPT, SIDE, STRING, TASK.  Use VOID to ignore the type.  Use FUNCTION to
check that a string is a defined function.
Usage : Call
Params: 1. Array, the arguments
        2. Array of arrays, all possible types aligned with their argument
            ex: [['SCALAR'], ['STRING', 'BOOL'], ['ARRAY']]
        3. Array of arrays, all possible types for nested arrays, use [] to skip
            ex: [[], [], ['SCALAR', 'CODE']]
        4. Scalar, the minimum number of arguments
Return: Boolean, true if all arguments are valid">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ConfigGetLocations" func="yes">
            <Overload retVal="" descr="Returns an array of markers that cover every location of (1) in the current world.
Markers have correct X and Y sizes for each location, according to the config file.
Do not delete these markers, calls with the same arguments returned a cached array.
Usage: Call
Params: 1. Array or string, the location(s) to place markers on
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ConfigGetVehicleClasses" func="yes">
            <Overload retVal="" descr="Searches through CfgVehicles and returns all vehicle classnames that are a real vehicle
(not a base/fake class) and that meet the criteria.
Usage : Call
Params: 1. Array/String, class type(s), 'All' to skip
 (opt.) 2. Side, (default: 'All')
 (opt.) 3. Array or string, subtype(s) (default: 'All')
 (opt.) 4. Array or string, faction(s) (default: 'All')
 (opt.) 5. Array or string, class parent(s) (default: 'All')
 (opt.) 6. String, 'unarmed', 'armed', 'both' (default: 'both')
 (opt.) 7. Array or string, DLC type(s), '' for no DLC, (default: 'All')
Return: Array of strings">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ConvertToGroupArray" func="yes">
            <Overload retVal="" descr="Gets array of groups that are associated with (1).  Removes duplicates and other data types.
Usage : Call
Params: 1. Array, group, object, side
 (opt.) N. ...
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ConvertToObjectArray" func="yes">
            <Overload retVal="" descr="Gets array of objects that are associated with (1).  Removes duplicates and other data types.
Usage : Call
Params: 1. Array, group, object, side
 (opt.) N. ...
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ConvertToPosition" func="yes">
            <Overload retVal="" descr="Gets the [x,y,z] position related to (1).
Usage : Call
Params: 1. Array, group, object, string
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_CreateFireSupport" func="yes">
            <Overload retVal="" descr="Creates a template in the global array with the given arguments.  For (5), this is half
the time the function waits before firing the first round. For (8), guided means the
rounds are directed towards a target by a function.  See Zen_InvokeFireSupport and
Zen_AddFireSupport action for how to select this target and limitations.
Usage : Call
Params: 1: String, classname of round fired
 (opt.) 2: Scalar, rounds per salvo, (default: 5)
    OR
 (opt.) 2: Array, rounds per salvo, (default: [5, 5])
            1. Scalar, the minimum rounds per salvo
            2. Scalar, the maximum rounds per salvo
    AND
 (opt.) 3: Scalar, number of salvos, (default: 1)
    OR
 (opt.) 3: Array, number of salvos, (default: [1, 1])
            1. Scalar, the minimum number of salvos
            2. Scalar, the maximum number of salvos
    AND
 (opt.) 4: Scalar, time between rounds, (default: 5)
    OR
 (opt.) 4: Array, time between rounds, (default: [5, 5])
            1. Scalar, the minimum time between rounds
            2. Scalar, the maximum time between rounds
    AND
 (opt.) 5: Scalar, time between salvos, (default: 10)
    OR
 (opt.) 5: Array, time between salvos, (default: [10, 10])
            1. Scalar, the minimum time between salvos
            2. Scalar, the maximum time between salvos
    AND
 (opt.) 6: Scalar, round spread radius, meters, (default: 100)
    OR
 (opt.) 6: String, a marker, the fire support shape
    AND
 (opt.) 7: Scalar, salvo drift from center, meters, (default: 25)
    OR
 (opt.) 7: Array, salvo drift from center, meters, (default: [25, 25])
            1. Scalar, the minimum salvo drift from center, meters
            2. Scalar, the maximum salvo drift from center, meters
    AND
 (opt.) 8: Boolean, true if the munitions are guided, (default: false)
Return: String, the fire support template name">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_CreateLoadout" func="yes">
            <Overload retVal="" descr="Registers (1) with a unique name (2), for use in Zen_GiveLoadoutCustom and Zen_AddLoadoutDialog.
See the Custom Loadout Demonstration for formatting instructions.
Usage : Call
Params: 1. Array, the loadout data
 (opt.) 2. String, the custom loadout unique name, (default: Random)
Return: String, the unique loadout name">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_CreateObjective" func="yes">
            <Overload retVal="" descr="Creates an objective and the task for it and completes the task when the objective is
completed.  Nothing is spawned other than the objective.  The side is that of the
objective, not who will complete it.  Only the given units see the task and the marker for
the objective.  You can create invalid combinations of arguments for which function
behavior is undefined.
Usage : Call
Params: 1. Array, object, string, group, the position of the objective
        2. Array, group, object, or side, units to get the task
        3. Side, the side of the object being created
        4. String or array of strings, which objective(s) to create 'Box'
            'Mortar' 'Wreck' 'Officer' 'POW' 'Convoy' 'Custom'
        5. String, the type of win condition, 'eliminate' 'reach' 'protect' 'rescue'
    AND IF (4) == 'Convoy'
        6. Array, object, group, or string, convoy start position
 (opt.) 7. String, the speed of the convoy, 'limited' 'normal' 'full', (default: 'limited')
    OR IF (4) == 'Custom'
        6. Array, string, the classname(s) of the object to create, can be vehicle(s), person(s) or both
Return: Array:
            1. Array of objects, the created objects
            2. String, the global string name of the task">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ExecuteCommand" func="yes">
            <Overload retVal="" descr="Executes the command sequence matching (1) using each of (2) in order.  For simple engine
commands this should be the same order of arguments.  For any custom command sequence, the
order is arbitrary.  If the command uses no arguments, (2) will not be used.
Usage : Call
Params: 1. String, command sequence identifier
        2. Any, the command arguments
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ExtendPosition" func="yes">
            <Overload retVal="" descr="Returns a position a distance (2) and at angle (3) from (1).  Angle may be compass or trig.
Usage : Call
Params: 1. Array, group, object, string, the center
        2. Scalar, the distance from the center
        3. Scalar, the angle from the center
 (opt.) 4. String, how to interpret the angle, 'Trig' or 'Compass', (default: 'Compass')
 (opt.) 5. Scalar, height of the point, (default: 0)
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ExtendRay" func="yes">
            <Overload retVal="" descr="Returns a position a distance (3) from (2) at the angle from (1) to (2), such that the point
is on the line between (1) and (2).  The height of the returned position is 0.
Usage : Call
Params: 1. Array, group, object, string, the first point
        2. Array, group, object, string, the second point
        3. Scalar, the distance from the second point
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_Find2dDistance" func="yes">
            <Overload retVal="" descr="Computes 2d distance by giving 'distance' only 2d arguments, ignoring height.
Usage : Call
Params: 1. Array, group, object, string, first position
        2. Array, group, object, string, second position
Return: Scalar">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_FindAveragePosition" func="yes">
            <Overload retVal="" descr="Returns a point that is composed of the average x and average y position of (1,N).
The height of the returned position is 0.
Usage : Call
Params: 1. Array, group, object, string, the first position
 (opt.) 2. Array, group, object, string, the second position
 (opt.) N. ...
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_FindBuildingPositions" func="yes">
            <Overload retVal="" descr="Attempts to generate up to (2) 2D random positions ATL inside the building nearest (1)
on every floor and, if (3), the roof.
Usage: Call
Params: 1. Array, group, object, string, a point
 (opt.) 2. Boolean, true to generate positions on the roof, (default: false)
 (opt.) 3. Scalar, the number of positions, (default: 1 per 4m^2)
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_FindCenterPosition" func="yes">
            <Overload retVal="" descr="Finds the 2D position that minimizes the greatest distance to any of (1).
Usage : Call
Params: 1. Array, group, object, string, the positions
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_FindDirection" func="yes">
            <Overload retVal="" descr="Returns the trig angle from (1) to (2), does not convert negative angles to positive.
Usage : Call
Params: 1. Array, group, object, string, starting position
        2. Array, group, object, string, angle to this position
Return: Scalar">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_FindDistanceToPolyEdge" func="yes">
            <Overload retVal="" descr="Returns the distance from (1) inside or outside of a logical rectangle or ellipse to the
edge of that polygon.  There is a little error (< 2 meters) for performance reasons.
Usage : Call
Params: 1. Array, group, object, string, the point
        2. Scalar, the angle from the point to look for the edge of the polygon
    AND
        3. String, a marker
    OR
        3. Array, group, object, string, the center of the polygon
        4. Array, the dimensions of the polygon
            1. Scalar, the horizontal radius
            2. Scalar, the vertical radius
        5. Scalar, the angle of the polygon as rotated from 0 degrees
        6. String, the shape of the polygon, only 'ellipse' or 'rectangle'
Return: Scalar">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_FindGroundPosition" func="yes">
            <Overload retVal="" descr="Enter 0 to skip (3) and (5,12).
Usage: Call
Params: 1. String, the name of the area marker to generate positions in
 (opt.) 2. Scalar, the minimum distance from the center of the area marker, (default: 0)
    OR
        1. Object, position, group, or icon marker, the center
 (opt.) 2. Array: (default: [0, 200])
            1. Scalar, the minimum distance around the center
            2. Scalar, the maximum distance around the center
    AND
 (opt.) 3. Array of strings, markers to black list, (default: [])
    OR
 (opt.) 3. Array, black and white lists (default: [[], [], []])
            1. Array of strings, all blacklist, points cannot be in any of these markers
     (opt.) 2. Array of strings, all whitelist, points must be in all of these markers, (default: [])
     (opt.) 3. Array of strings, one whitelist, points must be in one or more of these markers, (default: [])
    AND
 (opt.) 4. Scalar, 0 = both, 1 = only land, 2 = only water, (default: 1)
 (opt.) 5. Array, road positions, (default: [0,0])
            1. Scalar, 0 = ignore, 1 = move to nearby road, 2 = require roads, 3 = avoid roads
            2. Scalar, radius to scan for or avoid road positions in
 (opt.) 6. Array, angles, the max can be greater than the min, (default: [0,360])
 (opt.) 7. Array, include or exclude positions near houses, (default: [0,0,0])
 (opt.) 8. Array, include or exclude positions near other points, (default: [0,0,0])
 (opt.) 9. Array, include or exclude positions near water, (default: [0,0])
 (opt.) 10. Array, include or exclude positions on a slope, (default: [0,0,-1])
 (opt.) 11. Array, include or exclude positions near ambient clutter, (default: [0,0,0])
 (opt.) 12. Array, include or exclude points at altitude ASL, (default: [0,0,0])
 (opt.) 13. Scalar, the maximum number of filters that can be unsatisfied, (default: 0)">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_FindInRange" func="yes">
            <Overload retVal="" descr="Returns a number between and including (1,2), can be decimal or whole.
Usage : Call
Params: 1. Scalar, the minimum
        2. Scalar, the maximum
 (opt.) 3. Boolean, true to round to a whole number, (default: false)
Return: Scalar">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_FindMaxDistance" func="yes">
            <Overload retVal="" descr="Compares all (1) to (2) and returns the element of (1) that is farthest from the center.
All elements of the array must be of the type denoted below.
Usage : Call
Params: 1. Array of arrays, objects, groups, or strings, the positions to compare
        2. Array, group, object, string, the center
Return: Array, group, object, string, the element itself, not its position">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_FindMinDistance" func="yes">
            <Overload retVal="" descr="Compares all (1) to (2) and returns the element of (1) that is nearest from the center.
All elements of the array must be of the type denoted below.
Usage : Call
Params: 1. Array of arrays, objects, groups, or strings, the positions to compare
        2. Array, group, object, string, the center
Return: Array, group, object, string, the element itself, not its position">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_FindNearHeight" func="yes">
            <Overload retVal="" descr="Searches random positions for (3)'st altitude within (2) meters of (1).
Usage : Call
Params: 1. Array, group, object, string, the center
        2. Scalar, max distance to search
 (opt.) 3. String, 'high' or 'low', the elevation to find, (default: 'high')
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_FindPositionPoly" func="yes">
            <Overload retVal="" descr="Generates a random 2d point at (5) degrees from the center inside a polygon of shape (4)
with size (2) at (1) facing (3) degrees.  (5) should use Zen_QuantizeAngles when point
distribution in an uneven shape with limited angles is necessary; otherwise, it may be simpler.
Usage: Call
Params: 1. String, area marker
        2. Array, angles to choose randomly from, the angles and their order are arbitrary
            ex: [(random 360)]
            ex: [5,10,15,20,25,30]
    OR
        1. Array, group, object, the center
        2. Array
            1. Scalar, the X radius of the polygon
            2. Scalar, the Y radius of the polygon
        3. Scalar, the direction of the polygon in degrees
        4. String, the shape of the polygon, 'Rectangle' or 'Ellipse'
        5. Array, angles to choose randomly from, the angles and their order are arbitrary
            ex: [(random 360)]
            ex: [5,10,15,20,25,30]
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_FindRayIntersection" func="yes">
            <Overload retVal="" descr="Determines if the rays starting at (1,2) and pointing at trigonometric angles (3,4),
respectively, converge to a point.  If so, returns their point of intersection;
otherwise, returns [0,0,0].
Usage : Call
Params: 1. Array, group, object, string, the start of the first ray
        2. Array, group, object, string, the start of the second ray
        3. Scalar, the angle of the first ray
        4. Scalar, the angle of the second ray
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_FindRoadDirection" func="yes">
            <Overload retVal="" descr="Finds the trigonometric direction of the road within 50m of (1).  At crossroads, it
will determine the direction statistically by which road has more area closer to (1).
Usage : Call
Params: 1. Array, group, object, string, the center
Return: Scalar">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_FindTerrainGradient" func="yes">
            <Overload retVal="" descr="Returns the 2D trig angle in the XY plane pointing in the direction of greatest
elevation increase at (1), or the average within (2) meters, if (2) > 0.
Usage : Call
Params: 1. Array, group, object, string, the terrain point
 (opt.) 2. Scalar, the radius to average gradients, (default: -1)
Return: Scalar">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_FindTerrainSlope" func="yes">
            <Overload retVal="" descr="Returns the absolute Z angle from the XY plane parallel to the terrain at (1),
or the average within (2) meters, if (2) > 0.
Usage : Call
Params: 1. Array, group, object, string, the terrain point
 (opt.) 2. Scalar, the radius to average slopes, (default: -1)
Return: Scalar">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_FindTrigAngle" func="yes">
            <Overload retVal="" descr="Converts a compass angle into a trigonometric angle or vice-versa.  Does not convert
negative angles to positive.
Usage : Call
Params: 1. Scalar
Return: Scalar">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_FindValidDirection" func="yes">
            <Overload retVal="" descr="Returns all trig angles that do not pass within (3) meters of any of (2).
Usage : Call
Params: 1. Array, group, object, string, the center
        2. Array, group, object, string, point(s) to avoid
        3. Scalar, distance around each point to avoid
Return: Array of scalars">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_GetAllInArea" func="yes">
            <Overload retVal="" descr="Returns an array of all living units within (1).  Includes units in vehicles,
but not vehicles themselves.
Usage : Call
Params: 1. String, a marker
 (opt.) 2. Array, markers units cannot be in, (default: [])
 (opt.) 3. Array, side, the side(s) of units to return, (default: all)
    OR
        1. Array, group, object, string, the center of the polygon
        2. Array, the dimensions of the polygon
            1. Scalar, the horizontal radius
            2. Scalar, the vertical radius
        3. Scalar, the angle of the polygon as rotated from 0 degrees
        4. String, the shape of the polygon, only 'ellipse' or 'rectangle'
 (opt.) 5. Array, markers units cannot be in, (default: [])
 (opt.) 6. Array, side, the side(s) of units to return, (default: all)
Return:  Array of objects">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_GetAllInBuilding" func="yes">
            <Overload retVal="" descr="Returns an array of all living units in or on the building nearest (1).
Usage : Call
Params: 1. Array, group, object, string, the center to find nearest building
 (opt.) 2. Array, side, the side(s) of units to return, (default: All)
Return: Array of objects">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_GetAmbientClutterCount" func="yes">
            <Overload retVal="" descr="Counts the number of trees, rocks, and shrubs with (2) meters of (1) by matching key
strings to their model names.  It may not detect new or modded objects as is.
Usage : Call
Params: 1. Array, group, object, string, the center
        2. Scalar, the radius
Return: Array:
            1. Scalar, trees count
            2. Scalar, rocks count
            3. Scalar, shrubs count">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_GetCurrentTask" func="yes">
            <Overload retVal="" descr="Returns the unique name of (1)'s current task.
Usage : Call
Params: 1. Object, the unit
Return: String, '' if there is no current task">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_GetFireSupportActionData" func="yes">
            <Overload retVal="" descr="Gets all data associated with (1).
Usage : Call
Params: 1. String, the fire support action name
Return: Array
        1. String, the fire support action name
        2. Array of objects, units the action is assigned to
        3. String, the name of the action
        4. String, the fire support template name
        5. Object or String, the guiding object
        6. String, guidance type
        7. Scalar, maximum number of usages
        8. Scalar, current number of usages">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_GetFireSupportData" func="yes">
            <Overload retVal="" descr="Gets all data associated with (1).  This data is the same as given to
Zen_CreateFireSupport when the template was created.
Usage : Call
Params: 1: String, fire support template name
Return: Array
        1. String, the fire support template name
        2. String, classname of round fired
        3. Array of scalars, min and max rounds per salvo
        4. Array of scalars, min and max number of salvos
        5. Array of scalars, min and max time between rounds
        6. Array of scalars, min and max time between salvos
        7. Array, shape data
            1. Scalar, the X radius
            2. Scalar, the Y radius
            3. String, the shape, 'rectangle' or 'ellipse'
            4. Scalar, marker angle in degrees
        8. Array of scalars, min and max salvo drift from center
        9. Boolean, true if the munitions are guided">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_GetFreeSeats" func="yes">
            <Overload retVal="" descr="Returns the availability of the driver, turret, and cargo seats in (1).
Usage : Call
Params: 1. Object, a vehicle
 (opt.) 2. Array, string, turret types to check, 'All' 'Commander' 'Gunner' 'CargoFFV', (default: ['All'])
Return: Array
        1. Boolean, true if the driver seat is free
        2. Array, the free turret paths
        3. Array of scalars, the free cargo seat indexes">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_GetLoadoutData" func="yes">
            <Overload retVal="" descr="Reads the global array and returns the loadout data for (1) formatted for Zen_CreateLoadout.
See the Custom Loadout Demonstration for formatting instructions.
Usage : Call
Params: 1. String, the unique loadout name
Return: Array, the loadout data">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_GetSide" func="yes">
            <Overload retVal="" descr="Returns the side of (1), uses config file side, not scripted setFriend/setCaptive values.
Usage : Call
Params: 1. Classname, object
Return: Side">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_GetSideColor" func="yes">
            <Overload retVal="" descr="Returns the color of the side of (1), uses config file side, not scripted
setFriend/setCaptive values.
Usage : Call
Params: 1. Classname, object
Return: String, a marker color">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_GetTaskDataGlobal" func="yes">
            <Overload retVal="" descr="Gets all current properties of (1).
Usage : Call
Params: 1. String, the unique name of the task
Return: Array
        1. String, the unique name of the task
        2. Array of objects, the objects that have the task
        3. String, the current state of the task
        4. Position, the task destination, this is [0,0,0] if the task has no destination
        5. String, the task description
        6. String, the task title
        7. String, the parent task, empty string if there is no parent
        8. Array of strings, the child tasks of this task, empty array if there are no children">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_GetTurretPaths" func="yes">
            <Overload retVal="" descr="Reads the config file for (1) and creates an array that contains the paths to all of its
turrets.  Each element of the array is directly usable in moveInTurret.
Usage : Call
Params: 1. Classname, object, the vehicle's class or an object of the class
 (opt.) 2. Array, string, turret types to return, 'All' 'Commander' 'Gunner' 'CargoFFV', (default: ['All'])
Return: Array, each turret path as an element">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_GetUnitFireSupportActions" func="yes">
            <Overload retVal="" descr="Gets all unique fire support action names given to (1).
Usage : Call
Params: 1: Object, the unit to get the fire support actions for
Return: Array of strings">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_GetUnitLoadout" func="yes">
            <Overload retVal="" descr="Returns the current equipment of (1) in the correct format for Zen_CreateLoadout.
Usage : Call
Params: 1. Object, the unit to examine
Return: Array, the loadout data">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_GetUnitTasks" func="yes">
            <Overload retVal="" descr="Gets all unique task names of tasks given to (1).
Usage : Call
Params: 1: Object, the unit to get the tasks for
Return: Array of strings">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_GiveLoadout" func="yes">
            <Overload retVal="" descr="Calls the correct loadout function based upon (2).  A 'custom' type can only be given if
the loadout is given.  Only give people for (1), not vehicles.
Usage : Call
Params: 1. Array, group, object, or side, units to be armed
    AND
        2. Side, the side of equipment to give
 (opt.) 3. Array of strings or string, the specific loadout(s) to choose from, (default: Random)
            Accepts any listed for Zen_GiveLoadoutBlufor etc
 (opt.) 4. Boolean, true to remote execute the function, (default: true)
    OR
        2. String, 'custom' to use custom loadouts
        3. Array of strings or string, the specific loadout(s) to choose from
            Accepts any custom from Zen_CreateLoadout
 (opt.) 4. String, the method to add the loadout, 'additive' or 'complete', (default: 'complete')
 (opt.) 5. Boolean, true to remote execute the function, (default: true)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_GiveLoadoutBlufor" func="yes">
            <Overload retVal="" descr="Give various, preset but randomized loadouts to (1).
Usage : Call
Params: 1. Array, group, object, or side, units to be armed
 (opt.) 2. Array of strings or string, the loadout(s) to choose from, (default: Random)
        'Recon', 'Rifleman', 'Grenadier', 'AutoRifleman', 'Marksman', 'Team Leader',
        'Squad Leader', 'Assistant AA', 'Assistant AT', 'Assistant AR', 'AA Specialist',
        'AT Rifleman', 'AT Specialist', 'Medic', 'Sapper', 'Miner', 'EOD Specialist',
        'Officer', 'Sniper', 'Spotter', 'UAV Operator', 'Crewman', 'Fighter Pilot',
        'Helicopter Pilot', 'Helicopter Crew', 'Diver', 'Diver Sapper', 'Guerrilla'
        'Diver Land' (diver with a standard rifle), 'Civilian'
 (opt.) 3. Boolean, true to remote execute the function, (default: true)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_GiveLoadoutCargo" func="yes">
            <Overload retVal="" descr="Gives the custom loadout(s) (2) to (1).  Use only for vehicles.  Do not use preset loadouts.
See Custom Loadout Demonstration for how to use presets indirectly.
Usage : Call
Params: 1. Array, object, vehicles to fill
        2. Array of strings or string, the specific loadout(s) to choose from
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_GiveLoadoutCustom" func="yes">
            <Overload retVal="" descr="Gives the custom loadout(s) (2) to (1).  Use only for people.  If (3) is 'additive',
new equipment will replace previous when necessary.
Usage : Call
Params: 1. Array, group, object, or side, units to be armed
        2. Array of strings or string, the specific loadout(s) to choose from
        3. String, the method to add the loadout, 'additive' or 'complete', (default: 'complete')
 (opt.) 4. Boolean, true to remote execute the function, (default: true)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_GiveLoadoutIndfor" func="yes">
            <Overload retVal="" descr="Give various, preset but randomized loadouts to (1).
Usage : Call
Params: 1. Array, group, object, or side, units to be armed
 (opt.) 2. Array of strings or string, the loadout(s) to choose from, (default: Random)
        'Recon', 'Rifleman', 'Grenadier', 'AutoRifleman', 'Marksman', 'Team Leader',
        'Squad Leader', 'Assistant AA', 'Assistant AT', 'Assistant AR', 'AA Specialist',
        'AT Rifleman', 'AT Specialist', 'Medic', 'Sapper', 'Miner', 'EOD Specialist',
        'Officer', 'Sniper', 'Spotter', 'UAV Operator', 'Crewman', 'Fighter Pilot',
        'Helicopter Pilot', 'Helicopter Crew', 'Diver', 'Diver Sapper', 'Guerrilla'
        'Diver Land' (diver with a standard rifle), 'Civilian'
 (opt.) 3. Boolean, true to remote execute the function, (default: true)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_GiveLoadoutOpfor" func="yes">
            <Overload retVal="" descr="Give various, preset but randomized loadouts to (1).
Usage : Call
Params: 1. Array, group, object, or side, units to be armed
 (opt.) 2. Array of strings or string, the loadout(s) to choose from, (default: Random)
        'Recon', 'Rifleman', 'Grenadier', 'AutoRifleman', 'Marksman', 'Team Leader',
        'Squad Leader', 'Assistant AA', 'Assistant AT', 'Assistant AR', 'AA Specialist',
        'AT Rifleman', 'AT Specialist', 'Medic', 'Sapper', 'Miner', 'EOD Specialist',
        'Officer', 'Sniper', 'Spotter', 'UAV Operator', 'Crewman', 'Fighter Pilot',
        'Helicopter Pilot', 'Helicopter Crew', 'Diver', 'Diver Sapper', 'Guerrilla'
        'Diver Land' (diver with a standard rifle), 'Civilian'
 (opt.) 3. Boolean, true to remote execute the function, (default: true)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_InvokeFireSupport" func="yes">
            <Overload retVal="" descr="Generates the fire support effect of (2) at (1).  For guided rounds, if (4) is 'designator',
(3) must have a laser designator, or guidance will not work.  Stops
executing when the fire support ends.
Usage : Spawn
Params: 1: Object, marker, group, position, the center
        2: String, the fire support template name
    AND IF the template has 'true' for guided
        3. Object, the target or the designating unit
 (opt.) 4. String, what the object is, 'target' 'designator', (default: 'designator')
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_InvokeTask" func="yes">
            <Overload retVal="" descr="Creates a task and assigns it to (1).  Entering a 0 for (4) will skip it and the task will
have no destination.  If you do not enter (7), a random name will be generated.  Do not use
this function during the briefing.  Only call this function on the server.
Usage : Call
Params: 1. Array, group, object, side, units to get the task
        2. String, long description shown when a player clicks on the task
        3. String, the title of the task
 (opt.) 4. Array, group, object, string, the task destination, (default: 0)
 (opt.) 5. Boolean, true to set this as the current task, (default: false)
 (opt.) 6. String, the global name of the parent of the task for this task, (default: '')
 (opt.) 7. String, the the unique name of the task, (default: random)
Return: String, the unique name of the task">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_InvokeTaskBriefing" func="yes">
            <Overload retVal="" descr="Creates a task for (1), works during the mission briefing (before sleep).  Entering a 0
for (4) will skip it and the task will have no destination.  Do not use this function
after the briefing.  You must call this function on all clients.  This function will
not work if run only on the server.
Usage : Call
Params: 1. Array, group, object, side, units to get the task
        2. String, long description shown when a player clicks on the task
        3. String, the title of the task
        4. String, the the unique name of the task
 (opt.) 5. Array, group, object, string, the task destination, (default: 0)
 (opt.) 6. String, the global name of the parent of the task for this task, (default: '')
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_IsAngleInSector" func="yes">
            <Overload retVal="" descr="Determines if (1) is between (2).  Accounts for negative angles and the minimum being
greater than the maximum, and it works for both compass and trig angles.
Usage : Call
Params: 1. Scalar, the angle to test
        2. Array
            1. Scalar, minimum angle
            2. Scalar, maximum angle
Return: Boolean">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_IsFacing" func="yes">
            <Overload retVal="" descr="Determines if (1)'s fov (3) has (2) in it.  It operates in 2d and does not consider terrain
or obstacles.
Usage : Call
Params: 1. Object, the observer
        2. Object, the unit being looked at
 (opt.) 3. Scalar, the angle of view that the target can be in, (default: 45)
Return: Boolean, true if (2) in within the (3) fov of the (1)">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_IsForestArea" func="yes">
            <Overload retVal="" descr="Evaluates the extent to which (1) or the logic polygon covers a forest.  Performance will
degrade as the number of trees in (1) increases.  The return value is an approximation of
how much the total area is covered by trees, normalized between 0 and 1.
Usage : Call
Params: 1. String, a marker
 (opt.) 2. Array, markers trees cannot be in, (default: [])
    OR
        1. Array, group, object, string, the center of the polygon
        2. Array, the dimensions of the polygon
            1. Scalar, the horizontal radius
            2. Scalar, the vertical radius
        3. Scalar, the angle of the polygon as rotated from 0 degrees
        4. String, the shape of the polygon, only 'ellipse' or 'rectangle'
 (opt.) 5. Array, markers trees cannot be in, (default: [])
Return: Scalar, 0 for no trees, 1 for completely forested">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_IsHillArea" func="yes">
            <Overload retVal="" descr="Evaluates the extent to which (1) or the logic polygon covers a hill.  The return
value is an approximation of how much the elevation gradient conforms to a hilltop,
normalized between 0 and 1.
Usage : Call
Params: 1. String, a marker
 (opt.) 2. Array, markers points cannot be in, (default: [])
    OR
        1. Array, group, object, string, the center of the polygon
        2. Array, the dimensions of the polygon
            1. Scalar, the horizontal radius
            2. Scalar, the vertical radius
        3. Scalar, the angle of the polygon as rotated from 0 degrees
        4. String, the shape of the polygon, only 'ellipse' or 'rectangle'
 (opt.) 5. Array, markers points cannot be in, (default: [])
Return: Scalar, 0 for entirely flat, 1 for a tall hilltop">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_IsIsland" func="yes">
            <Overload retVal="" descr="Evaluates the extent to which (1) is on an island within (2) meters.  The return
value is an approximation of how much (1) is surrounded by water between 0 and 1.
Performance will vary by how much water exists and (2).
Usage : Call
Params: 1. Array, group, object, string, the center
 (opt.) 2. Scalar, the distance to search, (default: 500)
Return: Scalar">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_IsNearTerrain" func="yes">
            <Overload retVal="" descr="Returns true if is there (3) terrain within (2) from (1).
Usage : Call
Params: 1. Array, group, object, string, the center
        2. Scalar, the distance
        3. String, terrain type, only 'land', 'water', 'both'
Return: Boolean">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_IsPointInPoly" func="yes">
            <Overload retVal="" descr="Determines if (1) is within (2) or the logical polygon
Usage : Call
Params: 1. Array, group, object, string, the point
    AND
        2. String, a marker
    OR
        2. Array, group, object, string, the center of the polygon
        3. Array, the dimensions of the polygon
            1. Scalar, the horizontal radius
            2. Scalar, the vertical radius
        4. Scalar, the angle of the polygon as rotated from 0 degrees
        5. String, the shape of the polygon, only 'ellipse' or 'rectangle'
Return: Boolean, true if the point is in the polygon">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_IsRayInPoly" func="yes">
            <Overload retVal="" descr="Determines if a logical ray crosses (2) or the logical polygon.
Usage : Call
Params: 1. Array, group, object, string, the start of the ray
        2. Scalar, the length of the ray
        3. Scalar, the angle from the start to generate the ray
    AND
        4. String, a marker
    OR
        4. Array, group, object, string, the center of the polygon
        5. Array, the dimensions of the polygon
            1. Scalar, the horizontal radius
            2. Scalar, the vertical radius
        6. Scalar, the angle of the polygon as rotated from 0 degrees
        7. String, the shape of the polygon, only 'ellipse' or 'rectangle'
Return: Boolean, true if any point on the ray is in the polygon">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_IsReady" func="yes">
            <Overload retVal="" descr="Determines if (1) itself and all crew are done with their current order. Do not use for a
person.  Does not check passengers.
Usage : Call
Params: 1. Object, the vehicle
Return: Boolean, true if all are ready">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_IsSeen" func="yes">
            <Overload retVal="" descr="Determines if any surrounding units of a different side can see (1).  It accounts for
object and terrain obstructions and the direction that each unit is looking.  It does not
account for weather or camouflage.  Does not consider vehicles.
Usage : Call
Params: 1. Object, the observed unit
        2. Scalar, the distance around that unit to scan for enemies
Return: Boolean, true if any unit can see the given unit">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_IsUrbanArea" func="yes">
            <Overload retVal="" descr="Evaluates the extent to which (1) or the logic polygon covers a city.  Performance will
degrade as the size of (1) increases.  The return value is an approximation of how much
the total area is covered by buildings and roads, normalized between 0 and 1.
Usage : Call
Params: 1. String, a marker
 (opt.) 2. Array, markers buildings cannot be in, (default: [])
    OR
        1. Array, group, object, string, the center of the polygon
        2. Array, the dimensions of the polygon
            1. Scalar, the horizontal radius
            2. Scalar, the vertical radius
        3. Scalar, the angle of the polygon as rotated from 0 degrees
        4. String, the shape of the polygon, only 'ellipse' or 'rectangle'
 (opt.) 5. Array, markers buildings cannot be in, (default: [])
Return: Scalar, 0 for no buildings, 1 for completely urban">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_IsVisible" func="yes">
            <Overload retVal="" descr="Determines if (1) is seen by (2), accounts for terrain and object obstructions and the
direction the observer is facing.  It does not account for weather or camouflage.
Usage : Call
Params: 1. Object, the unit that may be seen
        2. Object, the observer
 (opt.) 3. Scalar, the angle of view that the target can be in, (default: 45)
Return: Boolean, true if (1) can be seen by (2)">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_IsWaterArea" func="yes">
            <Overload retVal="" descr="Evaluates the extent to which (1) or the logic polygon covers water.  Performance will
degrade as the size of (1) increases.  The return value is an approximation of how much
the total area is covered by water, normalized between 0 and 1.
Usage : Call
Params: 1. String, a marker
 (opt.) 2. Array, markers points cannot be in, (default: [])
    OR
        1. Array, group, object, string, the center of the polygon
        2. Array, the dimensions of the polygon
            1. Scalar, the horizontal radius
            2. Scalar, the vertical radius
        3. Scalar, the angle of the polygon as rotated from 0 degrees
        4. String, the shape of the polygon, only 'ellipse' or 'rectangle'
 (opt.) 5. Array, markers points cannot be in, (default: [])
Return: Scalar, 0 for no water, 1 for completely water">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_MoveAsSet" func="yes">
            <Overload retVal="" descr="Moves all (1) with their relative center to (2), keeping their direction and distance
from the new center the same.
Usage : Call
Params: 1. Array, group, object, side, string, objects or markers
        2. Array, group, object, string, the new center
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_MoveInVehicle" func="yes">
            <Overload retVal="" descr="Places all (1) in (2) instantly.  It is fully multiplayer compatible and synch'd.  Extra
units will be left behind.
Usage : Spawn
Params: 1. Array, group, object, side, units
        2. Object, the vehicle
 (opt.) 3. String, where to put the units, 'Cargo', 'Driver', 'Turret', 'All', (default: 'Cargo')
 (opt.) 4. Array, string, turret to put units, 'All' 'Commander' 'Gunner' 'CargoFFV', (default: ['All'])
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_MultiplyDamage" func="yes">
            <Overload retVal="" descr="Adds a handle damage eventhandler to (1) to increase the damage dealt by all bullets to (1)
by a fixed value.  The global increase variable is Zen_Damage_Increase, its default value
is 7.  For reference, the hit value for a 5.56 NATO round is 8.  If you change
Zen_Damage_Increase in multiplayer, you must publicVariable it.  Changes will take affect
immediately.  Do not use a value less than -5.  Works for all modded and addon weapons
and ammo.  Does not affect units in vehicles.  Increases the fatigue of the injured unit
by half of the damage he receives.
Usage : Call
Params: 1. Array, group, object, side, the objects to add the eventhandler to
 (opt.) 2. Boolean, true to remove all other handle damage eventhandlers, (default: false)
 (opt.) 3. Boolean, true to remote execute the function, (default: true)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_OrderAircraftPatrol" func="yes">
            <Overload retVal="" descr="Orders (1) to patrol in the area at random.  You can enter a 0 to skip (4).
Stops executing when all of (1) are dead.  Works for helicopters, jets, and UAV's.
(1) will dynamically follow an object or group given as (2).
Usage : Spawn
Params: 1. Array of objects or object, the vehicles to patrol
    AND
        2. Array, object, group, or icon marker, the center of the patrol area
 (opt.) 3. Scalar, the maximum distance to patrol around the center, (default: 500)
    OR
        2. Area marker, the patrol area
    AND
 (opt.) 3. Array of strings, blacklist, points cannot be in any of these markers, (default: [])
    OR
 (opt.) 3. Array, black and white lists (default: [[], [], []])
            1. Array of strings, all blacklist, points cannot be in any of these markers
     (opt.) 2. Array of strings, all whitelist, points must be in all of these markers, (default: [])
     (opt.) 3. Array of strings, one whitelist, points must be in one or more of these markers, (default: [])
    AND
 (opt.) 4. Array, (default: [0, 360])
            1. Scalar, the minimum angle around the center to patrol in
            2. Scalar, the maximum angle around the center to patrol in
 (opt.) 5. String, the speed of (1), 'limited' 'normal' 'full', (default: 'normal')
 (opt.) 6. String, the behavior of (1), 'safe' 'aware' 'combat' 'stealth', (default: 'aware')
 (opt.) 7. Scalar, the height to fly at, (default: 75)
 (opt.) 8. Boolean, true to cleanup destroyed vehicles and their crew, (default: false)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_OrderBoatPatrol" func="yes">
            <Overload retVal="" descr="Orders (1) to patrol in the area at random.  You can enter a 0 to skip (4).
Stops executing when all of (1) are dead.  Works only for ships.
(1) will dynamically follow an object or group given as (2).
Usage : Spawn
Params: 1. Array of objects or object, the vehicles to patrol
    AND
        2. Array, object, group, or icon marker, the center of the patrol area
 (opt.) 3. Scalar, the maximum distance to patrol around the center, (default: 500)
    OR
        2. Area marker, the patrol area
    AND
 (opt.) 3. Array of strings, blacklist, points cannot be in any of these markers, (default: [])
    OR
 (opt.) 3. Array, black and white lists (default: [[], [], []])
            1. Array of strings, all blacklist, points cannot be in any of these markers
     (opt.) 2. Array of strings, all whitelist, points must be in all of these markers, (default: [])
     (opt.) 3. Array of strings, one whitelist, points must be in one or more of these markers, (default: [])
    AND
 (opt.) 4. Array, (default: [0, 360])
            1. Scalar, the minimum angle around the center to patrol in
            2. Scalar, the maximum angle around the center to patrol in
 (opt.) 5. String, the speed (1), 'limited' 'normal' 'full', (default: 'normal')
 (opt.) 6. String, the behavior of (1), 'safe' 'aware' 'combat' 'stealth', (default: 'aware')
 (opt.) 7. Boolean, true to cleanup destroyed vehicles and their crew, (default: false)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_OrderExtraction" func="yes">
            <Overload retVal="" descr="Orders (1) to go to each of (2) in order.  It waits for all (3) to be in (1) at (2.1).
It then goes to (2.2) and waits forever, not ordering the units to exit.  Stops
executing when (1) stops forever.
Usage : Spawn
Params: 1. Object, vehicle
        2. Array, the positions
            1. Array, group, object, string, the point to extract from
            2. Array, group, object, string, where to land next
        3. Array, group, object, side, the passengers that will get on
 (opt.) 4. String, speed of (1), 'limited' 'normal' 'full', (default: 'normal')
    AND IF (1) is a helicopter
 (opt.) 5. Scalar, the height to fly at, (default: 40)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_OrderFastRope" func="yes">
            <Overload retVal="" descr="Forces all (2) to fastrope from (1) in an orderly fashion.  Deploys and removes rope from (1).
Stops executing when all (2) are on the ground.
Usage : Spawn
Params: 1. Object, the helicopter to fastrope from
        2. Array, group, object, side, the passengers to fastrope
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_OrderHelicopterLand" func="yes">
            <Overload retVal="" descr="Orders (1) to move to (2) and land.  Stops executing when (1) lands.  Makes (1)
avoid combat when possible.  Works only for helicopters and hovering UAV's.
Usage : Spawn
Params: 1. Object, the helicopter
        2. Array, group, object, string, where to land
 (opt.) 3. String, the speed of (1), 'limited' 'normal' 'full', (default: 'normal')
 (opt.) 4. Scalar, the height to fly at, (default: 40)
 (opt.) 5. Boolean, true to hover over the destination, (default: false)
 (opt.) 6. Boolean, true cleanup the helicopter if it crashes while flying to (2), (default: false)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_OrderInfantryMove" func="yes">
            <Overload retVal="" descr="Orders (1) to move to (2), avoiding combat when possible. Stops executing when (1) is close
to (2), all of (1) are dead, or (1)'s AI leader has given up. Works only for infantry.
Usage : Spawn
Params: 1. Group or object, the group or a unit in the group
        2. Array, group, object, string, where to go
 (opt.) 3. String, the speed of (1), 'limited' 'normal' 'full', (default: 'normal')
 (opt.) 4. String, the behavior of (1), 'safe' 'aware' 'combat' 'stealth', (default: 'safe')
 (opt.) 5. String, the combat mode of (1), 'blue', 'green', 'white', 'yellow', 'red', (default: 'green')
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_OrderInfantryPatrol" func="yes">
            <Overload retVal="" descr="Orders all (1) to patrol at random.  You can enter a 0 to skip (4).  Stops
executing when all of (1) are dead.  Works only for infantry.  (1) will
chase and attack any enemy infantry that they spot.  You can combine groups
of any side.  (1) will dynamically follow an object or group given as (2).
Usage : Spawn
Params: 1. Array, object, group, side, the group(s) or units in groups
    AND
        2. Array, object, group, or icon marker, the center of the area to patrol
 (opt.) 3. Array, (default: [50, 200])
            1. Scalar, the minimum distance around the center to patrol in
            2. Scalar, the maximum distance around the center to patrol in
    OR
        2. Area marker, the area to patrol in
     AND
 (opt.) 3. Array of strings, blacklist, points cannot be in any of these markers, (default: [])
    OR
 (opt.) 3. Array, black and white lists (default: [[], [], []])
            1. Array of strings, all blacklist, points cannot be in any of these markers
     (opt.) 2. Array of strings, all whitelist, points must be in all of these markers, (default: [])
     (opt.) 3. Array of strings, one whitelist, points must be in one or more of these markers, (default: [])
    AND
 (opt.) 4. Array, (default: [0, 360])
            1. Scalar, the minimum angle around the center to patrol in
            2. Scalar, the maximum angle around the center to patrol in
 (opt.) 5. String, the speed of (1), 'limited' 'normal' 'full', (default: 'limited')
 (opt.) 6. String, the behavior of (1), 'safe' 'aware' 'combat' 'stealth', (default: 'aware')
 (opt.) 7. Boolean, false to disable AI chasing the enemy, (default: true)
 (opt.) 8. Boolean, true to join weak groups to nearby groups, (default: false)
 (opt.) 9. Boolean, true to treat the patrols as underwater divers, (default: false)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_OrderInfantryPatrolBuilding" func="yes">
            <Overload retVal="" descr="Orders all (1) to move inside (5) buildings nearest the building nearest (2). Gives orders
to individual units instead of entire groups.  Stops executing when all of (1) are dead.
Usage : Spawn
Params: 1. Array, group, object, or side, units to patrol
        2. Array, group, object, string, a position
 (opt.) 3. Boolean, true to patrol outside the building sometimes, (default: false)
 (opt.) 4. String, the behavior of (1), 'safe' 'aware' 'combat' 'stealth', (default: 'aware')
 (opt.) 5. Scalar, the number of buildings within 100m meters to include in the patrol, (default: 1)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_OrderInsertion" func="yes">
            <Overload retVal="" descr="Orders (1) to go to each of (2) in order.  It waits for all (3) to get out of (1) at (2.1).
Then, if (2.2) is given, it goes there and waits forever; otherwise, it stops at (2.1)
forever.  Stops executing when (3) get out and (1) stops forever.  Works for all vehicles.
Usage : Spawn
Params: 1. Object, vehicle
    AND
        2. Array, the positions
            1. Array, group, object, string, the point to insert
     (opt.) 2. Array, group, object, string, where to land next
    OR
        2. Array, group, object, string, the position
    AND
        3. Array, object, group, side, the passengers to get off
 (opt.) 4. String, speed of (1), 'limited' 'normal' 'full', (default: 'normal')
    AND IF (1) is a helicopter
 (opt.) 5. Scalar, the height to fly at, (default: 40)
 (opt.) 6. String, insertion type, 'land', 'fastrope', 'parachute', (default: 'land')
 (opt.) 7. Boolean, true to delete (1) at the end, (default: false)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_OrderSlingLoad" func="yes">
            <Overload retVal="" descr="Orders (1) to fly to and sling-load (2), then move (2) to (3) and detach (2).
Stops executing when (1) drops (2) at (3), then (1) hovers there forever.
Usage: Spawn
Params: 1. Object, helicopter
        2. Object, vehicle
        3. Array, group, object, string, the point to drop
 (opt.) 4. Boolean, true to use a manual rope if sling-loading cannot be done automatically, (default: false)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_OrderVehicleDrop" func="yes">
            <Overload retVal="" descr="Orders (1) to fly over (2.1) and drop (3).  (1) then lands at (2.2) or stops forever
at an undefined location.  Stops executing when (1) stops.  Works for all aircraft.
(3) can be an ammo boxes or any vehicle.  (3) will be teleported to the aircraft.
Usage : Spawn
Params: 1. Object, helicopter
    AND
        2. Array, the positions
            1. Array, group, object, string, the point to drop
     (opt.) 2. Array, group, object, string, the point to land
    OR
        2. Array, group, object, string, the point to drop
    AND
        3. Object or string, the object or the classname of the object to drop
 (opt.) 4. String, speed of (1), 'limited' 'normal' 'full', (default: 'normal')
 (opt.) 5. Scalar, the height to fly at, (default: 80)
 (opt.) 6. Boolean, true to cleanup (1) if it crashes enroute, (default: false)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_OrderVehicleMove" func="yes">
            <Overload retVal="" descr="Orders (1) to move to (2), avoiding combat when possible. Stops executing when (1) is close
to (2), (1) cannot move or is destroyed, or (1)'s AI driver has given up.  Works for all vehicles.
Usage : Spawn
Params: 1. Object, the vehicle
        2. Array, group, object, string, where to go
 (opt.) 3. String, the speed of (1), 'limited' 'normal' 'full', (default: 'normal')
    AND IF (1) is an aircraft
 (opt.) 4. Scalar, the height to fly at, (default: 50)
    AND
 (opt.) 5. Boolean, true to delete (1) when it reaches (2), (default: false)
 (opt.) 6. Boolean, true to cleanup (1) if (1) is destroyed enroute, (default: false)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_OrderVehiclePatrol" func="yes">
            <Overload retVal="" descr="Orders (1) to patrol in the area at random.  You can enter a 0 to skip (4).
Stops executing when all of (1) are dead.  Works for ground vehicles and UGV's.
(1) will dynamically follow an object or group given as (2).
Usage : Spawn
Params: 1. Array of objects or object, the vehicles to patrol
    AND
        2. Array, object, group, or icon marker, the center of the patrol area
 (opt.) 3. Scalar, the maximum distance to patrol around the center, (default: 500)
    OR
        2. Area marker, the patrol area
      AND
 (opt.) 3. Array of strings, blacklist, points cannot be in any of these markers, (default: [])
    OR
 (opt.) 3. Array, black and white lists (default: [[], [], []])
            1. Array of strings, all blacklist, points cannot be in any of these markers
     (opt.) 2. Array of strings, all whitelist, points must be in all of these markers, (default: [])
     (opt.) 3. Array of strings, one whitelist, points must be in one or more of these markers, (default: [])
    AND
 (opt.) 4. Array, (default: [0, 360])
            1. Scalar, the minimum angle around the center to patrol in
            2. Scalar, the maximum angle around the center to patrol in
 (opt.) 5. String, the speed of (1), 'limited' 'normal' 'full', (default: 'normal')
 (opt.) 6. String, the behavior of (1), 'safe' 'aware' 'combat' 'stealth', (default: 'aware')
 (opt.) 7. Boolean, true to cleanup destroyed vehicles and their crew, (default: false)
 (opt.) 8. Boolean, false to not prefer road positions, (default: true)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_PrintError" func="yes">
            <Overload retVal="" descr="Hints and logs an error with the given arguments.
Usage : Call
Params: 1: String, name of function with error
        2: String, short description of the error
        3: Any, the argument(s) of the instance
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_QuantizeAngles" func="yes">
            <Overload retVal="" descr="Generates an array of angles from (2) to (3) from the marker or logical polygon such
that the step between any two angles sweeps out an equal area inside the polygon.
The variance of the step depends upon how uneven the dimensions are.  (2) can be
greater than (3), in which case the angles start at (3) and go to (2).
Params: 1. String, an area marker
        2. Scalar, the starting angle in degrees
        3. Scalar, the ending angle in degrees
    OR
        1. Array
            1. Scalar, the X radius of the polygon
            2. Scalar, the Y radius of the polygon
        2. Scalar, the starting angle in degrees
        3. Scalar, the ending angle in degrees
        4. Scalar, the direction of the polygon in degrees
        5. String, the shape of the polygon, 'Rectangle' or 'Ellipse'
Return: Array">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ReassignTask" func="yes">
            <Overload retVal="" descr="Removes (1) from (3) and adds it to (2).  All (1)'s properties remain the same.
Usage : Call
Params: 1. String, the unique name of the task
        2. Array, group, object, side, units to add the task to
 (opt.) 3. Array, group, object, side, units to remove the task from, (default: [])
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_RemoveFireSupport" func="yes">
            <Overload retVal="" descr="Removes one action associated with (1) from all units assigned in Zen_AddFireSupportAction
from all clients.  Removes in the order the actions were added.
Usage : Call
Params: 1. String, the fire support template name
 (opt.) 2. Boolean, true to remote execute the function, (default: true)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_RemoveFireSupportAction" func="yes">
            <Overload retVal="" descr="Removes the action associated with (1) from (2) assigned in Zen_AddFireSupportAction
from all clients.
Usage : Call
Params: 1. String, the fire support action name
 (opt.) 2. Array, group, object, side, units to remove from, (default: All)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_RemoveLoadout" func="yes">
            <Overload retVal="" descr="Deletes the data of (1) permanently from the global array.
Usage : Call
Params: 1. String, the unique loadout name
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_RemoveTask" func="yes">
            <Overload retVal="" descr="Removes (1) from (2).  All (1)'s properties remain the same.
Usage : Call
Params: 1. String, the unique name of the task
 (opt.) 2. Array, group, object, side, units to remove the task from, (default: All)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_RotateAsSet" func="yes">
            <Overload retVal="" descr="Rotates all (1) with their relative center by (2) degrees clockwise, keeping their distance
from the center the same.  Use a negative angle to rotate counter-clockwise.
Usage : Call
Params: 1. Array, group, object, side, string, objects or markers
        2. Scalar, the angle
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_SetAISkill" func="yes">
            <Overload retVal="" descr="Sets the skills of all (1) for all types; it is multiplayer sync'd.  Presets are meant to
differentiate AI units, not provide perfectly realistic values, and are subject to change.
Aiming accuracy is always decreased by 1/2 at night.
Usage : Call
Params: 1. Array, group, object, side, units
    AND
        2. Scalar from 0 to 1, the value for all skills
    OR
        2. String, the skills preset 'Militia', 'Infantry', 'Sniper', 'SOF', 'Officer', 'Crew'
    OR
        2. Array:
            1. Scalar, Aiming Accuracy
        OR
            1. Array, Aiming Accuracy:
                1. Scalar, the minimum value
                2. Scalar, the maximum value
        AND
     (opt.) 2. Scalar, Aiming Shake, (default: Value before)
        OR
     (opt.) 2. Array, Aiming Shake, (default: Value before):
                1. Scalar, the minimum value
                2. Scalar, the maximum value
        AND
     (opt.) 3. Scalar, Aiming Speed, (default: Value before)
        OR
     (opt.) 3. Array, Aiming Speed, (default: Value before):
                1. Scalar, the minimum value
                2. Scalar, the maximum value
        AND
     (opt.) 4. Scalar, Commanding, (default: Value before)
        OR
     (opt.) 4. Array, Commanding, (default: Value before):
                1. Scalar, the minimum value
                2. Scalar, the maximum value
    AND so on for 'courage', 'endurance', 'general', 'reloadSpeed', 'spotDistance', 'spotTime'
    (see documentation file for full text)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_SetTaskCurrent" func="yes">
            <Overload retVal="" descr="Makes (1) the current one for all (2).
Usage : Call
Params: 1. String, the unique name of the task
 (opt.) 2. Array, group, object, side, units to set current for, (default: All)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_SetTaskTarget" func="yes">
            <Overload retVal="" descr="Sets the target of (1) to (2).  (1)'s destination will now follow (2) on the map.
Usage : Call
Params: 1. String, the unique task name
        2. Object, the object to set as the target
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_SetViewDistance" func="yes">
            <Overload retVal="" descr="Sets the terrain, object, and shadow view distance.  Multiplayer sync'd.  Use -1 to
skip any parameter and have no change.  Currently only (1) has any effect, and it only
sets a hard limit for both terrain and object distances.
Usage : Call
Params: 1. Scalar, the terrain view distance
 (opt.) 2. Scalar, the object view distance, (default: -1 (no change))
 (opt.) 3. Scalar, the shadow view distance, (default: -1 (no change))
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_SetWeather" func="yes">
            <Overload retVal="" descr="Sets the weather based upon arguments, multiplayer sync'd.  Accepted types are 'fog',
'overcast', 'wind', 'rain', 'gusts', 'waves', 'date', 'packet'.  You must use 'overcast' before
'rain', as rain only starts if overcast > 0.7.  This applies to both current and future
values.  All changes can occur in parallel.  Weather change arguments are optional and
do not apply to 'wind'.  Use -1 to skip an immediate change.  Rain, wind, gusts, waves,
and lightning are managed automatically by engine, do not set them unless necessary.
Minimum time for an overcast change in 30 minutes; change times greater than 30 min
will not be exact.  Stops executing when the weather is sync'd on the current machine.
Usage : Spawn
Params: 1. Array, ex: ['overcast', 0.25 (now, 0 to 1)]
        2. Array, ex: ['fog', 0.7 , 0.1 (later), 300 (time for change, seconds)]
        3. Array, ex: ['wind', 5 (strength, 0 to 10), 45 (direction, 0 to 360)]
        4. Array, ex: ['overcast', -1 (skip), 0.6, 60*45 (45 minutes)]
        5. Array, ex: ['date', 30 (minute), 18 (hour), 26 (day), 7 (month), 2035 (year)]
        N. Array, ex: ['packet', false]
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ShowHideMarkers" func="yes">
            <Overload retVal="" descr="Locally shows or hides (1) for client machines if the player is in (2) or (3).  Fully
multiplayer propagated.  Enter 0 for (2) to skip.
Usage : Call
Params: 1. Array of strings, or string, the markers to show or hide
        2. Array, object, group, side, the units to show the markers to
 (opt.) 3. Array, object, group, side, the units to hide the markers from, (default: [])
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_SpawnAircraft" func="yes">
            <Overload retVal="" descr="Spawns a plane or UAV of side or type (2) at (1).  Spawns a crew of the correct side.
UAV's will also have a logical crew.  A height of 0 starts the aircraft on the ground,
otherwise it starts with its engines running and in flight.  Does not work for helicopters.
Usage : Call
Params: 1. Array, group, object, string, the spawn point
    AND
        2. Side, the side of the random vehicle to spawn
    OR
        2. Array, strings, the classname(s) of vehicle(s) to randomly spawn
    AND
 (opt.) 3. Scalar, the height, (default: 200)
 (opt.) 4. Scalar, the direction that the vehicle is facing, in degrees, (default: 0)
    AND IF (2) == Side
 (opt.) 5. Array, string, the faction(s) of the random vehicle to spawn, (default: 'All')
Return: Object">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_SpawnAmbientVehicles" func="yes">
            <Overload retVal="" descr="Spawns (3) empty civilian vehicles in and around all towns and cities
within (2) meters from (1).  Towns and cities are printed on the game map.
Usage: Call
Params: 1. Array, group, object, string, the center
        2. Scalar, the distance
        3. Scalar, the number of cars, or Array:
            1. Scalar, the minimum number of cars
            2. Scalar, the maximum number of cars
Return: Array of objects, the spawned cars">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_SpawnAmmoBox" func="yes">
            <Overload retVal="" descr="Spawns a random ammo box of side (2) at (1).
Usage : Call
Params: 1. Array, group, object, string, the spawn point
        2. Side
 (opt.) 3. Boolean, true to put explosives in the box
Return: Object">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_SpawnBoat" func="yes">
            <Overload retVal="" descr="Spawns a boat or submarine of side or type (2) at (1).  Spawns a crew of the correct side.
Usage : Call
Params: 1. Array, group, object, string, the spawn point
    AND
        2. Side, the side of the random vehicle to spawn
    OR
        2. Array, strings, the classname(s) of vehicle(s) to randomly spawn
    AND
 (opt.) 3. Scalar, the direction that the vehicle is facing, in degrees, (default: 0)
    AND IF (2) == Side
 (opt.) 4. Array, string, the faction(s) of the random vehicle to spawn, (default: 'All')
Return: Object">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_SpawnCamp" func="yes">
            <Overload retVal="" descr="Spawns a semi-random camp sized for about a four-man element.  Includes tents, weapons, and
a campfire.
Usage : Call
Params: 1. Array, group, object, string, the center
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_SpawnConvoy" func="yes">
            <Overload retVal="" descr="Spawns a convoy of side (2) in a group at (1).  If (2) is a side, randomly spawns 3 MRAP's
and trucks.  Otherwise, spawns all (2) in an order fashion.  Always places a random number
of troops into the last vehicle, if possible.
Usage : Call
Params: 1. Array, group, object, string, starting position
        2. Side
 (opt.) 3. Array, string, the faction(s) of vehicles to spawn, (default: 'All')
    OR
        2. Array, string, the vehicles to spawn in order
Return: Array of objects, the spawned vehicles">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_SpawnFortification" func="yes">
            <Overload retVal="" descr="Spawns a semi-random ring of defensive structures of radius (2).
Includes bunkers, sandbags, concrete walls, and a static weapon.
Usage : Call
Params: 1. Array, group, object, string, the center
        2. Scalar, the radius of the encircling fortifications
 (opt.) 3. String, the classname of the static weapon to spawn, (default: 'B_HMG_01_high_F')
Return: Object, the static weapon">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_SpawnGroundVehicle" func="yes">
            <Overload retVal="" descr="Spawns a land vehicle or UGV of side or type (2) at (1).  Spawns a crew of the correct side.
UGV's will also have a logical crew.  Does not work for UAV's.
Usage : Call
Params: 1. Array, group, object, string, the spawn point
    AND
        2. Side, the side of the random vehicle to spawn
    OR
        2. Array, strings, the classname(s) of vehicle(s) to randomly spawn
    AND
 (opt.) 3. Scalar, the direction that the vehicle is facing, in degrees, (default: 0)
    AND IF (2) == Side
 (opt.) 4. Array, string, the faction(s) of the random vehicle to spawn, (default: 'All')
Return: Object">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_SpawnGroup" func="yes">
            <Overload retVal="" descr="Spawns each of (2) at (1).  Makes the group the side of the first classname given.
Do not use a non-human class name, only soldiers or civilians.
Usage : Call
Params: 1. Array, group, object, string, the spawn position
        2. Array of strings or String, classname(s) of the units to spawn in order
Return: Group">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_SpawnHelicopter" func="yes">
            <Overload retVal="" descr="Spawns a helicopter of side or type (2) at (1).  Spawns a crew of the correct side.
A height of 0 starts the helicopter on the ground, otherwise it starts with its
engines running and in flight. Does not work for UAV's.
Usage : Call
Params: 1. Array, group, object, string, the spawn point
    AND
        2. Side, the side of the random vehicle to spawn
    OR
        2. Array, strings, the classname(s) of vehicle(s) to randomly spawn
    AND
 (opt.) 3. Scalar, the height, (default: 40)
 (opt.) 4. Scalar, the direction that the vehicle is facing, in degrees, (default: 0)
    AND IF (2) == Side
 (opt.) 5. Array, string, the faction(s) of the random vehicle to spawn, (default: 'All')
Return: Object">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_SpawnInfantry" func="yes">
            <Overload retVal="" descr="Spawns (4) units of side (2) as a group with skill (3) at (1).  (5,6) are based upon
config file organization and are subject to change by BIS.
Usage : Call
Params: 1. Array, group, object, string, the spawn point
        2. Side, of the units to spawn
        3. Skill, see Zen_SetAISkill documentation (2) (Object Functions)
    AND
        4. Scalar, how many units to spawn
    OR
        4. Array:
            1. Scalar, the minimum number of units to spawn
            2. Scalar, the maximum number of units to spawn
    AND
 (opt.) 5. String, the type of soldiers to spawn, (default: 'Men'), 'MenDiver' 'MenRecon' 'MenSniper'
 (opt.) 6. String, the faction of soldiers to spawn, (default: 'All'), 'BLU_F', 'IND_F', 'OPF_F', 'BLU_G_F'
 (opt.) 7. Array of strings, classnames to blacklist from spawning, (default: [])
 (opt.) 8. Array or string, DLC type(s), 'All' for all DLC, (default: '')
Return: Group">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_SpawnInfantryGarrison" func="yes">
            <Overload retVal="" descr="Spawns (4) units of side (2) as a group with skill (3) at (1).  Automatically places the
spawned units in the nearest building.  (5,6) are based upon config file organization
and are subject to change by BIS.
Usage : Call
Params: 1. Array, group, object, string, the point to choose the house from
        2. Side, of the units to spawn
        3. Skill, see Zen_SetAISkill documentation (2) (Object Functions)
    AND
        4. Scalar, how many units to spawn
    OR
        4. Array:
            1. Scalar, the minimum number of units to spawn
            2. Scalar, the maximum number of units to spawn
    AND
 (opt.) 5. String, the type of soldiers to spawn, (default: 'Men'), 'MenDiver' 'MenRecon' 'MenSniper'
 (opt.) 6. String, the faction of soldiers to spawn, (default: 'All'), 'BLU_F', 'IND_F', 'OPF_F', 'BLU_G_F'
 (opt.) 7. Array of strings, classnames to blacklist from spawning, (default: [])
 (opt.) 8. Array or string, DLC type(s), 'All' for all DLC, (default: '')
Return: Group">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_SpawnItemsOnTable" func="yes">
            <Overload retVal="" descr="Spawns all (1) on top of each of (2) in order.  Stops when there is no matching element.
Usage : Call
Params: 1. Array of strings, the classnames of the objects to spawn
        2. Array of objects, the tables to spawn the objects on
Return: Array, the spawned objects">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_SpawnMarker" func="yes">
            <Overload retVal="" descr="Simply creates a marker with a random, unique name.  Use 'ellipse' or 'rectangle' for
(5) to create an area marker.
Usage : Call
Params: 1. Array, group, object, string, where to place the marker
 (opt.) 2. String, the text to display beside the marker, (default: '')
 (opt.) 3. String, the color of the marker, (default: 'colorBlack')
 (opt.) 4. Array, (default: [1,1])
            1. Scalar, the x size of the marker
            2. Scalar, the y size of the marker
 (opt.) 5. String, the shape of the marker, (default: 'mil_dot')
 (opt.) 6. Scalar, the direction of the marker by compass angle, (default: 0)
 (opt.) 7. Scalar between 0 and 1, the transparency of the marker, (default: 1)
Return: String">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_SpawnParachute" func="yes">
            <Overload retVal="" descr="Spawn a cargo parachute and attaches it to (1).  Only (1)'s height changes.  The
parachute is affected by wind.  Detaches the parachute when the object reaches the
ground, sea level, or a building.  Stops executing when (1) lands.
Usage : Spawn
Params: 1. Object, the object to attach the parachute to
 (opt.) 2. String, the classname of the signal grenade, (default: 'SmokeShell')
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_SpawnVehicle" func="yes">
            <Overload retVal="" descr="Spawns a vehicle of (2).  If the height is greater than 0, the vehicle starts in flight.
Uses ASL over the ocean.  Do not use a human classname, only inanimate objects.
Usage : Call
Params: 1. Array, group, object, string, the place to spawn
        2. String, the classname of the vehicle to spawn
 (opt.) 3. Scalar, the height above the ground to spawn the vehicle, (default: 0)
 (opt.) 4. Scalar, the direction the vehicle faces, in degrees, (default: 0)
 (opt.) 5. Boolean, true to set the vehicle's position exactly at the point, (default: false)
Return: Object">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_SpawnVehicleCrew" func="yes">
            <Overload retVal="" descr="Spawns some crew based upon (3,4) in (1) of (1)'s side or side (2).
Usage : Call
Params: 1. Object, the vehicle
 (opt.) 2. Side, of the crew to spawn, (default: side of (1))
 (opt.) 3. Array, string, turret types to spawn, 'All' 'Commander' 'Gunner' 'CargoFFV', (default: ['All'])
 (opt.) 4. Boolean, true to spawn a driver, (default: true)
Return: Group">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_StringCapitalizeLetter" func="yes">
            <Overload retVal="" descr="Returns (1) with the character at (2) converted to upper case.  Index is 0 based.
Usage : Call
Params: 1. String
 (opt.) 2. Scalar, the index of the letter to capitalize, (default: 0)
Return: String">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_StringFindReplace" func="yes">
            <Overload retVal="" descr="Finds all occurrences of (2) in (1) and replaces them with (3).  Can be case sensitive.
Usage : Call
Params: 1. String, the string to search in
        2. String, the string to find
        3. String, the string to replace with
 (opt.) 4. Boolean, true to be case sensitive (default: false)
Return: String">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_StringGenerateRandom" func="yes">
            <Overload retVal="" descr="Generates a string of random, printing, non-space characters of length (1).
Only uses characters from the ASCII character set.
Usage : Call
Params: 1. Scalar, the length of the string
Return: String">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_StringGetDelimitedPart" func="yes">
            <Overload retVal="" descr="Gets all characters in (1) between (2) and (3).  Gets only the characters between the
first appearance of each delimiting string (or second if they are the same).  Returns an
empty string if (2) is not found.  Returns all of (1) past (2) if (3) is not found.
Delimiter search is case sensitive.
Usage : Call
Params: 1. String, the string to search in
        2. String, the starting delimiter, (example: 'AB:')
        3. String, the ending delimiter, (example: '/AB')
Return: String, not including delimiters">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_StringIsInString" func="yes">
            <Overload retVal="" descr="Determines if (1) is a contiguous part (2).  It may be case sensitive or not.  Use '#' as
a wildcard that will match any character.
Usage : Call
Params: 1. String, to search for
        2. String, to search in
 (opt.) 3. Boolean, true to be case sensitive (default: false)
Return: Boolean">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_StringRemoveWhiteSpace" func="yes">
            <Overload retVal="" descr="Removes all whitespace characters from (1).
Usage : Call
Params: 1. String
Return: String">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_TrackGroups" func="yes">
            <Overload retVal="" descr="Places markers on group leaders of (1), showing side and group strength.  Updates
to the next leader if one dies, removes the marker if the whole group dies.  Updates
every 10 seconds.  Can limit who sees the markers.  'Name' text is only shown
for human players.  Can also show group destination.  Use only for infantry, not
crew in a vehicle or a vehicle itself.
Usage : Call
Params: 1. Array, group, object, side, groups or units in groups
 (opt.) 2. String, type of text on the marker, 'group', 'name', 'number', 'object', 'none', (default: 'group')
 (opt.) 3. Boolean, show the group's destination, (default: False)
 (opt.) 4. Array, group, object, side, units that can't see the markers, (default: 0)
Return: Array:
            1. Array of strings, the markers
            2. Script handle, the thread updating the markers">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_TrackInfantry" func="yes">
            <Overload retVal="" descr="Places markers on individual soldiers, showing side and direction.  Displays an X
on dead units, updates every 10 seconds.  Can limit who sees the markers.
'Name' text is only shown for human players.  Use only for infantry or the crew of a
vehicle, not the vehicle itself.
Usage : Call
Params: 1. Array, group, object, side, the units
 (opt.) 2. String, type of text on the marker, 'group', 'name', 'number', 'object', 'none', (default: 'name')
 (opt.) 3. Array, group, object, side, units that can't see the markers, (default: 0)
Return: Array:
            1. Array of strings, the markers
            2. Script handle, the thread updating the markers">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_TrackVehicles" func="yes">
            <Overload retVal="" descr="Places markers on vehicles, showing vehicle type and side.  Removes the marker when the
vehicle is destroyed, greys out the marker when the vehicle is empty but not destroyed.
Updates every 10 seconds.  Can limit who sees the markers.  Use only for vehicles themselves
not the crew or any person.  'Name' text is only shown for human crew.
Usage : Call
Params: 1. Array of objects or object, the vehicles
 (opt.) 2. String, type of text on the marker, 'group', 'name', 'number', 'object', 'none', (default: 'none')
 (opt.) 3. Array, group, object, side, units that can't see the markers, (default: 0)
Return: Array:
            1. Array of strings, the markers
            2. Script handle, the thread updating the markers">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_TransformObject" func="yes">
            <Overload retVal="" descr="Alters the position and direction of (1), can set (1) normal to terrain.  Uses a height
above terrain level, including the ocean floor.  Use 0 to skip (4) with no change.
Usage : Call
Params: 1. Object, to transform
        2. Array, group, object, string, where to move (1)
 (opt.) 3. Scalar, the height to add to (2), (default: 0)
 (opt.) 4. Array, the new velocity of (1) in cylindrical coordinates meters/sec, (default: 0)
 (opt.) 5. Scalar, the new direction of (1), (default: no change)
 (opt.) 6. Boolean, true to align (1) with the terrain, (default: false)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_TriggerAreaClear" func="yes">
            <Overload retVal="" descr="Completes task (2) when none of (1) are in (4) or the logical polygon.
Stops executing when all (1) are dead or all (2) are (3).
Usage : Spawn
Params: 1. Array, group, object, side, objects that cannot be in the area
        2. Array of strings or string, global task name(s)
        3. String, resulting state of the task, 'failed' or 'succeeded'
    AND
        4. String, the name of a marker
 (opt.) 5. Array, markers units cannot be in, (default: [])
    OR
        4. Array, group, object, string, the center of the polygon
        5. Array like so [1, 2], the x,y radius of the polygon
        6. Scalar, the angle of the polygon as rotated from 0 degrees
        7. String, the shape of the polygon, only 'ellipse' or 'rectangle'
 (opt.) 8. Array, markers units cannot be in, (default: [])
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_TriggerAreaSecure" func="yes">
            <Overload retVal="" descr="Completes task (3) when none of (1) and at least one of (2) are in (5) or the logical polygon.
Stops executing when all (2) are dead or all (3) are (4).
Usage : Spawn
Params: 1. Array, group, object, side, objects that cannot be in the area
        2. Array, group, object, side, objects that must be in the area
        3. Array of strings or string, global task name(s)
        4. String, resulting state of the task, 'failed' or 'succeeded'
    AND
        5. String, the name of a marker
 (opt.) 6. Array, markers units cannot be in, (default: [])
    OR
        5. Array, group, object, string, the center of the polygon
        6. Array like so [1, 2], the x,y radius of the polygon
        7. Scalar, the angle of the polygon as rotated from 0 degrees
        8. String, the shape of the polygon, only 'ellipse' or 'rectangle'
 (opt.) 9. Array, markers units cannot be in, (default: [])
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_TriggerAreDead" func="yes">
            <Overload retVal="" descr="Completes task (2) when less than (4) of (1) are still alive.
Stops executing when all (2) are (3).
Usage : Spawn
Params: 1. Array, group, object, side, the object(s)
        2. Array of strings or string, global task name(s)
        3. String, resulting state of the task, 'failed' or 'succeeded'
 (opt.) 4. Scalar, the highest number of living objects that counts as completed, (default: 0)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_TriggerAreNear" func="yes">
            <Overload retVal="" descr="Completes task (3) when (2) are near (1).  If multiple points are given (1), (2) must be
near all of them.  Positions of objects and groups in (1) are updated dynamically.
Stops executing when all (1) are dead or all (2) are (3).
Usage : Spawn
Params: 1. Array, object, group, side, object(s) that can complete
        2. Array of strings or string, global task name(s)
        3. String, resulting state of the task, 'failed' or 'succeeded'
        4. Array, group, object, string, the point(s) to reach
 (opt.) 5. String, how many objects must be near, 'all' 'one', (default: 'one')
 (opt.) 6. Scalar, the maximum radius from the center, (default: 10)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_TriggerAreRescued" func="yes">
            <Overload retVal="" descr="Succeeds all (3) when all living (1) are secured by any of (2).  Fails all (3) if all (1)
die, even after rescue.  Sets all (1) to be captive.  Each hostage is rescued individually
and joins the nearest rescuer.  The hostage is then set not captive.  Stops executing when
all (2) are dead.
Usage : Spawn
Params: 1. Array, object, group, side, the hostage(s)
        2. Array, object, group, side, the rescuer(s)
        3. Array of strings or string, global task name(s)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_UpdateFireSupport" func="yes">
            <Overload retVal="" descr="Alters (1) with new values.  All but (1) can be skipped with a -1.  All but
(1) and (2) are optional. Otherwise, params are the same as Zen_CreateFireSupport.
Usage : Call
Params: 1. String, the fire support template name
        2: String, classname of round fired
 (opt.) 3: Scalar, rounds per salvo
    OR
 (opt.) 3: Array, rounds per salvo
            1. Scalar, the minimum rounds per salvo
            2. Scalar, the maximum rounds per salvo
    AND
 (opt.) 4: Scalar, number of salvos, (default: no change)
    OR
 (opt.) 4: Array, number of salvos, (default: no change)
            1. Scalar, the minimum number of salvos
            2. Scalar, the maximum number of salvos
    AND
 (opt.) 5: Scalar, time between rounds, (default: no change)
    OR
 (opt.) 5: Array, time between rounds, (default: no change)
            1. Scalar, the minimum time between rounds
            2. Scalar, the maximum time between rounds
    AND
 (opt.) 6: Scalar, time between salvos, (default: no change)
    OR
 (opt.) 6: Array, time between salvos, (default: no change)
            1. Scalar, the minimum time between salvos
            2. Scalar, the maximum time between salvos
    AND
 (opt.) 7: Scalar, round spread radius, meters, (default: no change)
    OR
 (opt.) 7: String, a marker, the fire support shape, (default: no change)
    AND
 (opt.) 8: Scalar, salvo drift from center, meters, (default: no change)
    OR
 (opt.) 8: Array, salvo drift from center, meters, (default: no change)
            1. Scalar, the minimum salvo drift from center, meters
            2. Scalar, the maximum salvo drift from center, meters
    AND
 (opt.) 9: Boolean, true if the munitions are guided, (default: no change)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_UpdateFireSupportAction" func="yes">
            <Overload retVal="" descr="Modifies the global data of the fire support actions for (1).  Adds the action to all (2)
on all clients.  Does not modify the current number of uses.  Use 0 to skip (2,6).
Usage : Call
Params: 1. String, the fire support template name
        2. Array, group, object, side, units to add to
 (opt.) 3. String, the fire support template name, (default: 0)
 (opt.) 4. Object or String, the target, the designating unit, or 'player', (default: 0)
 (opt.) 5. String, what the object is, 'target' 'designator', (default: 0)
 (opt.) 6. Scalar, maximum number of usages, (default: 0)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_UpdateLoadout" func="yes">
            <Overload retVal="" descr="Overwrites the data of (1) with (2), keeping the name the same.
Usage : Call
Params: 1. String, the unique loadout name
        2. Array, the loadout data
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_UpdateTask" func="yes">
            <Overload retVal="" descr="Updates many of the properties of a task.  If you enter 0 as the argument for (2,5),
that property will be skipped.  If (6), completes all (1)'s child tasks if (1) is
complete, and completes (1)'s parent if (1) and all other child tasks are complete.
You can enter [0,0,0] for (3) to remove the destination.
Usage : Call
Params: 1. String, the unique name of the task
 (opt.) 2. String, the state of the task, only 'succeeded', 'failed', 'created', or 'canceled'
 (opt.) 3. Array, group, object, string, the task destination to be shown on the map
 (opt.) 4. String, long description shown when a player clicks on the task
 (opt.) 5. String, the title of the task
 (opt.) 6. Boolean, to complete parent or child tasks, (default: false)
 (opt.) 7. Boolean, whether to show a notification for this update, (default: true)
Return: Void">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ValueFindInArray" func="yes">
            <Overload retVal="" descr="Gets the index of the element of (2) that matches (1). Not case sensitive for strings.
Matches nested arrays.  Converts (2) to an array if it is not one.
Usage : Call
Params: 1: Any, the value to test
        2: Array, the array to look in
Return: Scalar, -1 if there is no match">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ValueIsInArray" func="yes">
            <Overload retVal="" descr="Determines if (1) is in (2).  Searches recursively through all nested arrays.
Converts (2) to an array if it is not one.  Not case sensitive for strings.
Usage : Call
Params: 1. Any, the value to search for
        2. Any, the array to look in
Return: Boolean, true if (1) is in (2), at any nesting level">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ValuesAreEqual" func="yes">
            <Overload retVal="" descr="Evaluates if (1) and (2) are equal.  Checks type and evaluates arrays and nested arrays.
Not case sensitive for strings.
Usage : Call
Params: 1: Any
        2: Any
Return: Boolean">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ValuesAreInArray" func="yes">
            <Overload retVal="" descr="Determines if all values of (1) are in (2).  Evaluates nested arrays.  Converts (2) to an
array if it is not one.  If multiple elements are given for (1), each one is evaluated
separately.  To evaluate an entire nested array in (1), it must be nested in the arguments.
Usage : Call
Params: 1. Any, the value(s) to search for
        2. Any, the array to look in
Return: Boolean, true only if all of the given values are in the array">
            </Overload>
        </KeyWord>
        <KeyWord name="Zen_ValuesAreNotInArray" func="yes">
            <Overload retVal="" descr="Determines if all values of (1) are not in (2).  Evaluates nested arrays.  Converts (2) to
an array if it is not one.  If multiple elements are given for (1), each one is evaluated
separately.  To evaluate an entire nested array in (1), it must be nested in the arguments.
Usage : Call
Params: 1. Any, the value(s) to search for
        2. Any, the array to look in
Return: Boolean, true only if none of the given values is in the array">
            </Overload>
        </KeyWord>
    </AutoComplete>
</NotepadPlus>